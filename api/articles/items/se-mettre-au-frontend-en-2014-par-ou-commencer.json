{"slug":"se-mettre-au-frontend-en-2014-par-ou-commencer","filename":"2014-05-15-se-mettre-au-frontend-en-2014-par-ou-commencer","title":"Se mettre au frontend en 2014, par où commencer ?","date":"Thu, 15 May 2014 00:00:00 GMT","draft":false,"meta":{"date":"2014-05-15T00:00:00.000Z","title":"Se mettre au frontend en 2014, par où commencer ?","author":"kud","oldSlug":"frontend/2014-se-mettre-au-frontend","slug":"se-mettre-au-frontend-en-2014-par-ou-commencer"},"body":"<p>Un de nos lecteurs nous a récemment envoyé un email avec tout un tas de\nquestions; nous avons apprécié le geste et plutôt qu'uniquement lui répondre,\nnous souhaitions en faire profiter tout le monde.</p>\n<hr />\n<blockquote>\n<p>Salut <em>Putain de code !</em>,</p>\n</blockquote>\n<p>Salut :)</p>\n<blockquote>\n<p>Je viens d’être embauché en tant que Product Designer et il est prévu que je\nfasse du front. Malheureusement, pour diverses raisons, je n’ai plus pratiqué\nce métier depuis au moins 1 an. Je continue bien sûr de suivre ce qui se fait\nmais j’ai comme la sensation de me sentir un peu largué alors que c’était un\nsujet sur lequel je me sentais vraiment bien. On a un produit SaaS qui tourne\nsur Rails &amp; Angular, qui demande beaucoup de maintenabilité et une bonne\noptimisation. Là où j'interviens, c'est sur la définition et la création de la\nV2. Seulement avant de m’engager sur des sujets que je ne maîtrise plus, je\nsouhaiterais avoir un peu plus d’informations.</p>\n</blockquote>\n<p>Yes, pas de problème, dis-nous tout.</p>\n<blockquote>\n<p>Au niveau de mes besoins, il me faudrait, je pense, une solution fiable avec\nune première base de modules prédéfinis (même une version light) pour une\nquestion de rendement et d’optimisation du dev. Mon premier avis serait\nd’utiliser un Bootstrap avec Sass grâce à tout son système de modals /\ntableaux / tabs / grid / etc… seulement j’ai lu le contraire donc je me\nretrouve perdu. Dans vos articles {P!}, vous dîtes qu’il vaut mieux éviter des\nFrameworks du type Bootstrap, mais… pourquoi ?</p>\n</blockquote>\n<p>Les frameworks comme Bootstrap ne sont pas forcément une mauvaise chose, ils te\npermettent de mettre les bases d’un site, très pratique pour aller vite et\nsurtout faire des administrations. En revanche ils proposent des structures avec\ndes conventions CSS n’aidant pas forcément à finir avec un front-end\nmaintenable. De plus, cela force à <em>override</em> tout l’aspect visuel dès que ton\ndesign est personnalisé. Finalement, tu passes plus de temps à <em>overrider</em> un\nframework qui ne te convient pas tant que ça que de te créer ton propre ui kit.\n(sans compter le risque de voir ton site péter lors d’une mise à jour d’un\nframework).</p>\n<blockquote>\n<p>Avec une charte un peu custom, n’est-il pas préférable de se baser sur des\ncomposants pré-existants pour faciliter la charge et le temps passé à dev ? Il\nest peut-être possible d’en récupérer des similaires de façon individuelle\nautre part ?</p>\n</blockquote>\n<p>Si, effectivement, des solutions comme <a href=\"http://topcoat.io/\">topcoat</a> sont moins\n<em>opinionated</em> par exemple et permettent vraiment de personnaliser tous les\néléments proposés par défaut. Il faut vraiment trouver un framework qui fait que\nle strict nécessaire sans design finalement.</p>\n<blockquote>\n<p>Et les préprocesseurs (Sass surtout) c’est vraiment une bonne idée sur ce type\nde projet ou tu vois des contre-indications ?</p>\n</blockquote>\n<p>Les préprocesseurs CSS sont généralement une bonne chose, ils apportent de\nnombreuses options intéressants telles que les variables, les fonctions, là où\nle w3c met un certain temps à les sortir. Cependant, tous les préprocesseurs ne\nse ressemblent pas. Certains ont leur propre écriture comme Stylus ou Sass\n(Sass, pas scss). Certains sont aussi plus lents à compiler que d’autres (coucou\nSass). Nous préconisons un pseudo “post-processor” qui s’appelle\n<a href=\"https://github.com/reworkcss/rework\">Rework</a>. Avec rework, tu ajoutes juste les\nprocessing dont tu as besoin, et tout ça, généralement, sans casser le style\nd'écriture d’un fichier css (article à prevoir).</p>\n<blockquote>\n<p>Quant à mon workflow, j’aimerais tout reprendre depuis le début pour repartir\nsur des bases saines. Tu pourrais m’indiquer les indispensables sur Sublime\nText (Config, Plugins) et autres outils ?</p>\n</blockquote>\n<p>Orf, ca dépend de chacun mais en général, voici ce qu’on te préconise :</p>\n<ul>\n<li>Editeur : <a href=\"http://www.sublimetext.com/\">Sublime text</a> (avec\nBracketHighlighter, Color Highlighter, DocBlockr, EditorConfig, Emmet, Emmet\nCSS, HTML5, INI, JavaScript Console, JsFormat, Markdown Preview,\nMarkdownEditing, Modific, Placeholders, Theme - Flatland, Unicode Character\nHighlighter) ou <a href=\"http://atom.io\">Atom</a> (apm install, editorconfig, docblockr,\nhtmlhint, csslint, linter, linter-jscs, linter-jshint, css-color-highlighting,\natom-prettify, open-in-github-app, gist-it, autocomplete-plus). Pour être à\njour sur ces éditeurs, n’hésite pas à Suivre\n<a href=\"https://twitter.com/SublimePackages\">@SublimePackages</a> et\n<a href=\"https://twitter.com/Atom_Packages\">@Atom_Packages</a> sur Twitter.</li>\n<li>Terminal : <a href=\"http://www.iterm2.com/\">iterm2</a> sur mac, ou terminal de base</li>\n<li>Shell : zsh (<code>brew install zsh</code>),\n<a href=\"https://github.com/sorin-ionescu/prezto\">prezto (plugin zsh)</a></li>\n<li><a href=\"http://nightly.mozilla.org/\">Firefox Nightly</a> ou\n<a href=\"http://www.google.com/intl/fr/chrome/browser/canary.html\">Chrome Canary</a></li>\n</ul>\n<blockquote>\n<p>Je vois souvent passer du NPM / Grunt / Bower / Yo &amp; Co mais jamais vraiment\neu le temps de m’y plonger dedans. Il est possible d’avoir un petit résumé\net/ou un moyen d’apprendre le plus vite possible ?</p>\n</blockquote>\n<p>Tout d’abord lis ceci :\n<a href=\"http://www.24joursdeweb.fr/2013/automatisez-votre-workflow-front-end/\">Automatisez votre workflow front-end</a>.</p>\n<p>Pour le reste :</p>\n<ul>\n<li><p><a href=\"https://www.npmjs.org/\">NPM</a> : permet de gérer les versions de ce que tu\nutilises à la fois comme bibliothèque front ou outils de dev. Il sert aussi\nd’interface de ligne de commande permettant de\n<a href=\"/fr/articles/npm/frontend/\">lancer des commandes définies dans le package.json</a>.</p></li>\n<li><p><a href=\"http://bower.io/\">Bower</a> ne sert pas à grand chose, c’est une abstraction par\ndessus NPM. Nous pensons qu’il tend à mourir.\n[<a href=\"/fr/articles/npm/frontend/\">1</a>] [<a href=\"/fr/articles/npm/napa/\">2</a>]</p></li>\n<li><p><a href=\"http://gruntjs.com/\">Grunt</a> est un <em>task-runner</em>, il te permet d’automatiser\nles actions que tu répètes souvent : concaténer des scripts, preprocessing\nHTML &amp; CSS, copie des assets… Nous te conseillons d’utiliser gulp, beaucoup\nplus rapide et simple à prendre en main. [<a href=\"/fr/articles/js/gulp/\">1</a>]\n[<a href=\"/fr/articles/js/grunt/\">2</a>]</p></li>\n</ul>\n<blockquote>\n<p>Merci beaucoup !</p>\n</blockquote>\n<p>Tout le plaisir est pour nous. ;)</p>\n"}