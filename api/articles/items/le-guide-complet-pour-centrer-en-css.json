{"slug":"le-guide-complet-pour-centrer-en-css","filename":"2014-09-23-le-guide-complet-pour-centrer-en-css","title":"Le guide complet pour centrer en css","date":"Tue, 23 Sep 2014 00:00:00 GMT","draft":false,"meta":{"date":"2014-09-23T00:00:00.000Z","title":"Le guide complet pour centrer en css","author":"Nyalab","oldSlug":"css/centrer","slug":"le-guide-complet-pour-centrer-en-css"},"body":"<p>Centrer en css, c'est la base, et parfois, ce n'est pas si simple. Ce guide vous\nservira donc pour vous lister les techniques les plus connues pour réaliser ce\nfameux effet centré.</p>\n<p>Les principales techniques de centrage en css seront expliquées pendant les\npremières déclarations, et réutilisées par la suite dans tout le guide, vous\npouvez donc avoir un intérêt à lire le guide dans le sens normal de la lecture.</p>\n<p>Cependant, si vous souhaitez juste avoir le code correspondant à votre problème,\nvous pouvez utiliser le menu composé d'ancres ci-dessous.</p>\n<h2>Sommaire</h2>\n<ul>\n<li><a href=\"#tl-dr-mes-techniques-preferees\">tl;dr - mes techniques préférées</a></li>\n<li><a href=\"#techniques-traditionnelles\">Techniques tradtionnelles</a>\n<ul>\n<li><a href=\"#un-bloc-dans-un-bloc\">Un bloc dans un bloc</a></li>\n<li><a href=\"#des-blocs-dans-un-bloc\">Des blocs dans un bloc</a></li>\n<li><a href=\"#des-elements-inlines-dans-un-bloc\">Des éléments inlines dans un bloc</a></li>\n</ul></li>\n<li><a href=\"#techniques-avancees-flexbox-ie11-\">Techniques avancées : flexbox (ie11+)</a></li>\n<li><a href=\"#conclusion\">Conclusion</a></li>\n</ul>\n<h2>tl;dr - mes techniques préférées</h2>\n<h3>Un bloc dans un bloc</h3>\n<pre><code class=\"hljs language-css\"><span class=\"hljs-selector-class\">.parent</span> {\n  <span class=\"hljs-attribute\">position</span>: relative;\n\n  <span class=\"hljs-comment\">/* facultatif : résoud un bug non systématique de blur sur IE */</span>\n  <span class=\"hljs-attribute\">transform-style</span>: preserve-<span class=\"hljs-number\">3</span>d;\n}\n\n<span class=\"hljs-selector-class\">.child</span> {\n  <span class=\"hljs-attribute\">position</span>: absolute;\n  <span class=\"hljs-attribute\">top</span>: <span class=\"hljs-number\">50%</span>;\n  <span class=\"hljs-attribute\">left</span>: <span class=\"hljs-number\">50%</span>;\n  <span class=\"hljs-attribute\">transform</span>: <span class=\"hljs-built_in\">translate</span>(-<span class=\"hljs-number\">50%</span>, -<span class=\"hljs-number\">50%</span>); <span class=\"hljs-comment\">/* compatibilité : ie9+ */</span>\n}\n</code></pre>\n<p><em>Note : le détail de la technique est expliqué plus loin dans le post</em></p>\n<h3>Des blocs dans un bloc</h3>\n<pre><code class=\"hljs language-css\"><span class=\"hljs-selector-class\">.parent</span> {\n  <span class=\"hljs-attribute\">text-align</span>: center;\n}\n\n<span class=\"hljs-selector-class\">.parent</span><span class=\"hljs-selector-pseudo\">:before</span> {\n  <span class=\"hljs-attribute\">content</span>: <span class=\"hljs-string\">&quot;&quot;</span>;\n  <span class=\"hljs-attribute\">display</span>: inline-block;\n  <span class=\"hljs-attribute\">height</span>: <span class=\"hljs-number\">100%</span>;\n  <span class=\"hljs-attribute\">vertical-align</span>: middle;\n  <span class=\"hljs-attribute\">margin-right</span>: -<span class=\"hljs-number\">0.25em</span>; <span class=\"hljs-comment\">/* space width */</span>\n}\n\n<span class=\"hljs-selector-class\">.child</span> {\n  <span class=\"hljs-attribute\">display</span>: inline-block;\n  <span class=\"hljs-attribute\">vertical-align</span>: middle;\n}\n</code></pre>\n<p><em>Note : le détail de la technique est expliqué plus loin dans le post</em></p>\n<h3>Des éléments inline dans un bloc</h3>\n<pre><code class=\"hljs language-css\"><span class=\"hljs-selector-class\">.parent</span> {\n  <span class=\"hljs-attribute\">text-align</span>: center;\n}\n\n<span class=\"hljs-selector-class\">.child</span> {\n  <span class=\"hljs-attribute\">vertical-align</span>: middle;\n}\n</code></pre>\n<p><em>Note : le détail de la technique est expliqué plus loin dans le post</em></p>\n<h2>Techniques traditionnelles</h2>\n<h3>Un bloc dans un bloc</h3>\n<h4>Centrage horizontal</h4>\n<p>La technique du <code>margin: 0 auto;</code> consiste à dire au browser que les marges de\ngauche et droite seront identiques et que leur valeur sera <code>auto</code>. Le browser\ncalcule donc des marges de même taille de chaque côté et centre le bloc\nnaturellement.</p>\n<pre><code class=\"hljs language-css\"><span class=\"hljs-selector-class\">.parent</span> {\n}\n\n<span class=\"hljs-selector-class\">.child</span> {\n  <span class=\"hljs-attribute\">margin</span>: <span class=\"hljs-number\">0</span> auto;\n}\n</code></pre>\n<p>La technique du <code>left: 50%; + margin négative en unités</code> est à utiliser sur les\nblocs dont vous connaissez la taille à l'avance. Le principe consiste à\nexpliquer au navigateur qu'on place un bloc en <code>position: absolute;</code>. Celui-ci\nva donc chercher à se placer par rapport à son élément parent le plus proche qui\nest en <code>position: relative;</code>. Il faut donc ne pas oublier d'attribuer cette\npropriété sur le <code>.parent</code>. Il suffit ensuite d'indiquer qu'on place le bloc à\n<code>left: 50%;</code>. Le bloc se place donc à 50% vers la gauche par rapport à la taille\ntotale du bloc conteneur. Il ne nous reste plus qu'à décaler vers la droite le\nbloc <code>.child</code> en lui donnant une valeur de margin négative vers la gauche.\nCelle-ci doit être égale à la moitié de la <code>width</code>(en pixels, em, rems,\npourcentages, ...).</p>\n<pre><code class=\"hljs language-css\">.parent {\n  position: relative;\n}\n\n.child {\n  width: {X}em; /* remplacer {X} par votre valeur */\n  position: absolute;\n  left: 50%;\n  margin-left: -{X/2}em; /* remplacer {X/2} par la moitié de votre width */\n}\n</code></pre>\n<p>En combinant la technique précédente et des propriétés css modernes, on arrive à\nla technique du <code>transform: translate; négatif</code>. Même principe que la technique\nprécédente, sauf qu'à la fin, on indique au bloc enfant d'effectuer une\ntranslation sur lui-même, en suivant l'axe X (l'axe horizontal) de -50%, donc\n50% vers la droite. Sauf que ce 50% s'applique sur le bloc enfant directement.\nVous n'avez donc pas besoin de connaitre la <code>width</code> de l'élément enfant à\nl'avance. Le <code>transform-style: preserve-3d;</code> sur le bloc <code>.parent</code> est là pour\nrégler des problèmes de flou sur certains navigateurs lors de transitions.</p>\n<pre><code class=\"hljs language-css\"><span class=\"hljs-selector-class\">.parent</span> {\n  <span class=\"hljs-attribute\">position</span>: relative;\n\n  <span class=\"hljs-comment\">/* facultatif : résoud un bug non systématique de blur sur IE */</span>\n  <span class=\"hljs-attribute\">transform-style</span>: preserve-<span class=\"hljs-number\">3</span>d;\n}\n\n<span class=\"hljs-selector-class\">.child</span> {\n  <span class=\"hljs-attribute\">position</span>: absolute;\n  <span class=\"hljs-attribute\">left</span>: <span class=\"hljs-number\">50%</span>;\n  <span class=\"hljs-attribute\">transform</span>: <span class=\"hljs-built_in\">translateX</span>(-<span class=\"hljs-number\">50%</span>);\n}\n</code></pre>\n<h4>Centrage vertical</h4>\n<p>Même principe que la technique <code>left: 50%; + margin négative en unités</code>, sauf\nqu'on applique le principe aux propriétés css relatives à la hauteur. Vous avez\ndonc besoin de connaitre à l'avance la hauteur de votre bloc.</p>\n<pre><code class=\"hljs language-css\">.parent {\n  position: relative;\n}\n\n.child {\n  height: {Y}em; /* remplacer {Y} par votre valeur */\n  position: absolute;\n  top: 50%;\n  margin-top: -{Y/2}em; /* remplacer {Y/2} par la moitié de votre height */\n}\n</code></pre>\n<p>Ici on réutilise le principe expliqué dans la technique\n<code>transform: translate; négatif</code>, mais appliqué à la hauteur. Notez que le nom de\nla <a href=\"http://apps.workflower.fi/vocabs/css/fr\">valeur de la propriété</a> css passe\nde <code>translateX</code> à <code>translateY</code>.</p>\n<pre><code class=\"hljs language-css\"><span class=\"hljs-selector-class\">.parent</span> {\n  <span class=\"hljs-attribute\">position</span>: relative;\n\n  <span class=\"hljs-comment\">/* facultatif : résoud un bug non systématique de blur sur IE */</span>\n  <span class=\"hljs-attribute\">transform-style</span>: preserve-<span class=\"hljs-number\">3</span>d;\n}\n\n<span class=\"hljs-selector-class\">.child</span> {\n  <span class=\"hljs-attribute\">position</span>: absolute;\n  <span class=\"hljs-attribute\">top</span>: <span class=\"hljs-number\">50%</span>;\n  <span class=\"hljs-attribute\">transform</span>: <span class=\"hljs-built_in\">translateY</span>(-<span class=\"hljs-number\">50%</span>);\n}\n</code></pre>\n<h4>Les deux</h4>\n<p>En réutilisant toutes les techniques expliquées précédemment, on peut arriver à\nplusieurs solutions, à choisir selon votre contexte et vos préférences.</p>\n<p>Méthode à base de <code>display: inline-block</code></p>\n<pre><code class=\"hljs language-css\"><span class=\"hljs-selector-class\">.parent</span> {\n  <span class=\"hljs-attribute\">text-align</span>: center;\n}\n\n<span class=\"hljs-selector-class\">.parent</span><span class=\"hljs-selector-pseudo\">:before</span> {\n  <span class=\"hljs-attribute\">content</span>: <span class=\"hljs-string\">&quot;&quot;</span>;\n  <span class=\"hljs-attribute\">display</span>: inline-block;\n  <span class=\"hljs-attribute\">height</span>: <span class=\"hljs-number\">100%</span>;\n  <span class=\"hljs-attribute\">vertical-align</span>: middle;\n  <span class=\"hljs-attribute\">margin-right</span>: -<span class=\"hljs-number\">0.25em</span>;\n}\n\n<span class=\"hljs-selector-class\">.child</span> {\n  <span class=\"hljs-attribute\">display</span>: inline-block;\n  <span class=\"hljs-attribute\">vertical-align</span>: middle;\n}\n</code></pre>\n<p>Technique des <code>position: absolute; + marges négatives</code> avec tailles connues à\nl'avance</p>\n<pre><code class=\"hljs language-css\">.parent {\n  position: relative;\n}\n\n.child {\n  width: {X}em; /* remplacer {X} par votre valeur */\n  height: {Y}em; /* remplacer {Y} par votre valeur */\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  margin-left: -{X/2}em; /* remplacer {X/2} par la moitié de votre width */\n  margin-top: -{Y/2}em; /* remplacer {Y/2} par la moitié de votre height */\n}\n</code></pre>\n<p>Technique des <code>position: absolute; + marges négatives</code> avec tailles inconnues</p>\n<pre><code class=\"hljs language-css\"><span class=\"hljs-selector-class\">.parent</span> {\n  <span class=\"hljs-attribute\">position</span>: relative;\n  <span class=\"hljs-attribute\">transform-style</span>: preserve-<span class=\"hljs-number\">3</span>d;\n}\n\n<span class=\"hljs-selector-class\">.child</span> {\n  <span class=\"hljs-attribute\">position</span>: absolute;\n  <span class=\"hljs-attribute\">top</span>: <span class=\"hljs-number\">50%</span>;\n  <span class=\"hljs-attribute\">left</span>: <span class=\"hljs-number\">50%</span>;\n  <span class=\"hljs-attribute\">transform</span>: <span class=\"hljs-built_in\">translate</span>(-<span class=\"hljs-number\">50%</span>, -<span class=\"hljs-number\">50%</span>);\n}\n</code></pre>\n<h3>Des blocs dans un bloc</h3>\n<h4>Centrage horizontal</h4>\n<p>On utilise la propriété <code>display: inline-block;</code> qui permet d'avoir des\npropriétés d'affichage relatives aux éléments de type <code>block</code> et de type\n<code>inline</code>. Le côté <code>inline</code> nous permet d'utiliser tout simplement un\n<code>text-align: center;</code></p>\n<pre><code class=\"hljs language-css\"><span class=\"hljs-selector-class\">.parent</span> {\n  <span class=\"hljs-attribute\">text-align</span>: center;\n}\n\n<span class=\"hljs-selector-class\">.child</span> {\n  <span class=\"hljs-attribute\">display</span>: inline-block;\n}\n</code></pre>\n<h4>Centrage vertical</h4>\n<p>De la même façon que pour le centrage horizontal, on utilise le côté <code>inline</code> de\nla propriété <code>display: inline-block;</code> pour aligner verticalement les éléments\nenfants par rapport à leur conteneur parent.</p>\n<pre><code class=\"hljs language-css\"><span class=\"hljs-selector-class\">.parent</span> {\n}\n\n<span class=\"hljs-selector-class\">.child</span> {\n  <span class=\"hljs-attribute\">display</span>: inline-block;\n  <span class=\"hljs-attribute\">vertical-align</span>: middle;\n}\n</code></pre>\n<p>Une autre technique consiste à utiliser les propriétés css de\n<code>mise en tableaux</code>. On est obligé de créer un\n<a href=\"https://developer.mozilla.org/fr/docs/Web/CSS/Pseudo-%C3%A9l%C3%A9ments\">pseudo-élément</a>\npour gérer la mise en page par tableau. On créée tout simplement un tableau,\npuis une cellule de tableau, qu'on positionne grâce à un\n<code>vertical-align: middle;</code>. Les éléments <code>.child</code> s'alignent automatiquement dans\nleur conteneur.</p>\n<pre><code class=\"hljs language-css\"><span class=\"hljs-selector-class\">.parent</span><span class=\"hljs-selector-pseudo\">:before</span> {\n  <span class=\"hljs-attribute\">display</span>: table;\n  <span class=\"hljs-attribute\">width</span>: <span class=\"hljs-number\">100%</span>;\n}\n\n<span class=\"hljs-selector-class\">.parent</span> {\n  <span class=\"hljs-attribute\">display</span>: table-cell;\n  <span class=\"hljs-attribute\">vertical-align</span>: middle;\n}\n\n<span class=\"hljs-selector-class\">.child</span> {\n  <span class=\"hljs-attribute\">display</span>: inline-block; <span class=\"hljs-comment\">/* à enlever si vous ne souhaitez pas avoir vos blocs enfants alignés sur la même ligne, mais juste centrés verticalement sur la hauteur */</span>\n}\n</code></pre>\n<h4>Les deux</h4>\n<p>On peut combiner les deux solutions basées sur le <code>display: inline-block;</code> pour\navoir le résultat souhaité.</p>\n<pre><code class=\"hljs language-css\"><span class=\"hljs-selector-class\">.parent</span> {\n  <span class=\"hljs-attribute\">text-align</span>: center;\n}\n\n<span class=\"hljs-selector-class\">.child</span> {\n  <span class=\"hljs-attribute\">display</span>: inline-block;\n  <span class=\"hljs-attribute\">vertical-align</span>: middle;\n}\n</code></pre>\n<p>On peut aussir réutiliser la méthode à base de <code>display: table-cell</code> et\nl'adapter pour qu'elle centre horizontalement et verticalement.</p>\n<pre><code class=\"hljs language-css\"><span class=\"hljs-selector-class\">.parent</span><span class=\"hljs-selector-pseudo\">:before</span> {\n  <span class=\"hljs-attribute\">display</span>: table;\n  <span class=\"hljs-attribute\">width</span>: <span class=\"hljs-number\">100%</span>;\n}\n\n<span class=\"hljs-selector-class\">.parent</span> {\n  <span class=\"hljs-attribute\">display</span>: table-cell;\n  <span class=\"hljs-attribute\">vertical-align</span>: middle;\n  <span class=\"hljs-attribute\">text-align</span>: center;\n}\n\n<span class=\"hljs-selector-class\">.child</span> {\n  <span class=\"hljs-attribute\">display</span>: inline-block;\n  <span class=\"hljs-attribute\">text-align</span>: left;\n}\n</code></pre>\n<p>On peut réutiliser la technique précédente en étant un peu imaginatif pour\nfonctionner avec des <code>display: inline-block;</code>. Pour détailler, on crée un\npseudo-élément, qui aura un <code>content: '';</code> pour faire qu'il existe et soit\naffiché, puis on annule son affichage via un <code>margin-right négatif</code> qui a pour\nvaleur magique <code>-0.25em</code> ce qui correspond à la largeur d'un espace. On lui\napplique ensuite un\n<code>display: inline-block + height: 100% + vertical-align: middle</code> pour créer le\nconteneur à la taille souhaitée et on termine en calant l'élément enfant\n<code>.child</code> avec un centrage vertical.</p>\n<pre><code class=\"hljs language-css\"><span class=\"hljs-selector-class\">.parent</span> {\n  <span class=\"hljs-attribute\">text-align</span>: center;\n}\n\n<span class=\"hljs-selector-class\">.parent</span><span class=\"hljs-selector-pseudo\">:before</span> {\n  <span class=\"hljs-attribute\">content</span>: <span class=\"hljs-string\">&quot;&quot;</span>;\n  <span class=\"hljs-attribute\">display</span>: inline-block;\n  <span class=\"hljs-attribute\">height</span>: <span class=\"hljs-number\">100%</span>;\n  <span class=\"hljs-attribute\">vertical-align</span>: middle;\n  <span class=\"hljs-attribute\">margin-right</span>: -<span class=\"hljs-number\">0.25em</span>;\n}\n\n<span class=\"hljs-selector-class\">.child</span> {\n  <span class=\"hljs-attribute\">display</span>: inline-block;\n  <span class=\"hljs-attribute\">vertical-align</span>: middle;\n}\n</code></pre>\n<h3>Des éléments inlines dans un bloc</h3>\n<p>Ces éléments <code>inline</code> peuvent être par exemple des liens <code>&lt;a&gt;</code> ou des <code>&lt;span&gt;</code>\ntout simples. Ces techniques sont souvent très connues et ne devraient pas vous\nposer beaucoup de problèmes, elles ne seront pas commentées. Veuillez vous\nréférer <a href=\"https://developer.mozilla.org/fr/docs/Web/CSS/text-align\">text-align</a>\net\n<a href=\"https://developer.mozilla.org/fr/docs/Web/CSS/vertical-align\">vertical-align</a>\nsi vous souhaitez plus d'informations.</p>\n<h4>Centrage horizontal</h4>\n<pre><code class=\"hljs language-css\"><span class=\"hljs-selector-class\">.parent</span> {\n  <span class=\"hljs-attribute\">text-align</span>: center;\n}\n\n<span class=\"hljs-selector-class\">.child</span> {\n}\n</code></pre>\n<h4>Centrage vertical</h4>\n<pre><code class=\"hljs language-css\"><span class=\"hljs-selector-class\">.parent</span> {\n}\n\n<span class=\"hljs-selector-class\">.child</span> {\n  <span class=\"hljs-attribute\">vertical-align</span>: middle;\n}\n</code></pre>\n<h4>Les deux</h4>\n<pre><code class=\"hljs language-css\"><span class=\"hljs-selector-class\">.parent</span> {\n  <span class=\"hljs-attribute\">text-align</span>: center;\n}\n\n<span class=\"hljs-selector-class\">.child</span> {\n  <span class=\"hljs-attribute\">vertical-align</span>: middle;\n}\n</code></pre>\n<h2>Techniques avancées : flexbox (<a href=\"http://caniuse.com/#feat=flexbox\">ie11+</a>)</h2>\n<p>Flexbox est un outil très puissant quand il s'agit de gérer le position de blocs\nflex. Son seul défaut consiste en son faible support navigateur, mais il vous\nfaudra maitriser ces techniques si vous comptez faire du développement web dans\nles années à venir, d'autant plus qu'elles sont très simples à rédiger et\ncomprendre.</p>\n<h3>Centrage horizontal</h3>\n<p>On déclare le conteneur en bloc flex, et on lui applique la propriété\n<a href=\"https://developer.mozilla.org/fr/docs/Web/CSS/justify-content\">justify-content</a>.</p>\n<pre><code class=\"hljs language-css\"><span class=\"hljs-selector-class\">.parent</span> {\n  <span class=\"hljs-attribute\">display</span>: flex;\n  <span class=\"hljs-attribute\">justify-content</span>: center;\n}\n\n<span class=\"hljs-selector-class\">.child</span> {\n}\n</code></pre>\n<h3>Centrage vertical</h3>\n<p>Idem, on déclare le conteneur en bloc flex, et cette fois, on lui applique la\npropriété\n<a href=\"https://developer.mozilla.org/fr/docs/Web/CSS/align-items\">align-items</a>.</p>\n<pre><code class=\"hljs language-css\"><span class=\"hljs-selector-class\">.parent</span> {\n  <span class=\"hljs-attribute\">display</span>: flex;\n  <span class=\"hljs-attribute\">align-items</span>: center;\n}\n\n<span class=\"hljs-selector-class\">.child</span> {\n}\n</code></pre>\n<h3>Les deux</h3>\n<p>On combine le tout pour un résultat génial et simpliste.</p>\n<pre><code class=\"hljs language-css\"><span class=\"hljs-selector-class\">.parent</span> {\n  <span class=\"hljs-attribute\">display</span>: flex;\n  <span class=\"hljs-attribute\">justify-content</span>: center;\n  <span class=\"hljs-attribute\">align-items</span>: center;\n}\n\n<span class=\"hljs-selector-class\">.child</span> {\n}\n</code></pre>\n<h2>Conclusion</h2>\n<p>Essayez de toujours utiliser la solution la plus avancée techniquement par\nrapport à votre scope navigateur : si vous devez ne supporter que les IE\nrécents, utilisez flexbox ; si vous devez ne supporter que IE9+, utilisez les\ntransform: translate() ; sinon utilisez des techniques de plus en plus\n<em>anciennes</em>.</p>\n<p>Ce guide n'a volontairement pas parlé des préfixes navigateurs, car ce genre de\nchose doit être pris en charge automatiquement dans votre workflow par un\nautoprefixer\n(<a href=\"https://www.npmjs.org/package/gulp-autoprefixer\">gulp-autoprefixer</a>,\n<a href=\"https://www.npmjs.org/package/grunt-autoprefixer\">grunt-autoprefixer</a>,\n<a href=\"http://www.myth.io/\">inclus dans myth</a>, ...). Pour apprendre à l'installer ou à\nen apprendre plus sur le sujet, je vous renvoie\n<a href=\"/fr/articles/css/autoprefixer/mise-en-place/\">à l'article de MoOx</a>. Si vous\nsouhaitez quand même vous passez d'autoprefixer, vous pourrez vérifier la\ncompatibilité des propriétés sur <a href=\"http://caniuse.com/\">caniuse</a>.</p>\n"}