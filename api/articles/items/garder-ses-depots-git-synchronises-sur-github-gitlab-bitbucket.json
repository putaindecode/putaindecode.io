{"slug":"garder-ses-depots-git-synchronises-sur-github-gitlab-bitbucket","filename":"2018-10-23-garder-ses-depots-git-synchronises-sur-github-gitlab-bitbucket","title":"Garder ses d√©p√¥ts Git synchronis√©s sur GitHub, GitLab & Bitbucket","date":"Tue, 23 Oct 2018 00:00:00 GMT","draft":false,"meta":{"date":"2018-10-23T00:00:00.000Z","title":"Garder ses d√©p√¥ts Git synchronis√©s sur GitHub, GitLab & Bitbucket","author":"MoOx","oldSlug":"git/synchroniser-sans-effort-ses-depots-git-entre-github-gitlab-bitbucket","slug":"garder-ses-depots-git-synchronises-sur-github-gitlab-bitbucket","original":"https://moox.io/blog/keep-in-sync-git-repos-on-github-gitlab-bitbucket/"},"body":"<p>Partager du code en ligne est plut√¥t facile ces temps-ci.</p>\n<p>Par contre garder synchronis√©s tous ses d√©p√¥ts entre diff√©rents services, c'est\nune autre histoire. Alors oui, vous trouverez des commandes et scripts assez\nfacilement pour importer/exporter vos d√©p√¥ts. Idem pour mettre en place des\nmiroirs en lecture seule. Mais avoir un syst√®me transparent pour √™tre √† m√™me de\npousser son code sur diff√©rentes plateformes, c'est un peu moins facile. Mais bon\nc'est pas difficile pour autant.</p>\n<p>Souvent on utilise GitHub, qui est la solution la plus r√©pandue √† ce jour, mais\nen cas de grosse coupure (coucou les DDoS) ou juste car vous n'avez pas envie\nd'√™tre trop li√© √† GitHub (le rachat de GitHub par Microsoft vous rappelle le syndrome Skype ?)\nvous aimeriez bien avoir des\nmiroirs accessibles en √©criture.</p>\n<p><strong>Voici donc une petite astuce pour garder vos d√©p√¥ts synchro entre plusieurs\nplateformes</strong> comme GitLab et Bitbucket, o√π vous pourrez pousser et r√©cup√©rer du\ncode sans effort particulier, apr√®s un petit coup d'init. Donc pas de miroir en\nlecture seule hein. De vrais d√©p√¥ts. Et √ßa <strong>juste en utilisant les\nfonctionnalit√©s de git (push et pull)</strong>.</p>\n<p><em>Rappel : pour rester s√©curis√©, mettez en place SSH et l'authentification √† deux\nfacteurs (2FA) sur les plateformes que vous utilisez (sauf Bitbucket, car √ßa ne\nmarche pas avec leur outil CLI).</em></p>\n<h2>Git Tooling</h2>\n<p>Pour rendre le tout facile, on va s'installer quelques outils vite fait.</p>\n<h3>Github</h3>\n<p>On va utiliser <a href=\"https://github.com/github/hub\">hub</a>.</p>\n<p>Pour macOS</p>\n<pre><code class=\"hljs language-console\">brew install hub\n</code></pre>\n<p>Voir\n<a href=\"https://github.com/github/hub#installation\">les instructions d'installation hub</a>\npour les autres OS.</p>\n<p>Il vous faudra un <a href=\"https://github.com/settings/tokens/new\">token GitHub</a>.</p>\n<p>Mettez-le dans votre dossier home (~) dans un fichier <code>.github_token</code>, et\nchargez-le dans votre <code>.bash/zshrc</code> comme √ßa :</p>\n<pre><code class=\"hljs language-sh\"><span class=\"hljs-keyword\">if</span> [[ -f <span class=\"hljs-variable\">$HOME</span>/.github_token ]]\n<span class=\"hljs-keyword\">then</span>\n  <span class=\"hljs-built_in\">export</span> GITHUB_TOKEN=$(cat <span class=\"hljs-variable\">$HOME</span>/.github_token)\n<span class=\"hljs-keyword\">fi</span>\n</code></pre>\n<h3>GitLab</h3>\n<p><a href=\"http://narkoz.github.io/gitlab/cli\">GitLab CLI</a> est disponible en\n<a href=\"https://rubygems.org/\">rubygem</a> :</p>\n<pre><code class=\"hljs language-console\">gem install gitlab\n</code></pre>\n<p>(Vous aurez peut-√™tre besoin de <code>sudo gem install</code> si vous utilisez la version\nmacOS de ruby.)</p>\n<h4><code>Please set an endpoint to API</code></h4>\n<p>GitLab n√©cessite un token ainsi qu'un endpoint (car GitLab peut √™tre d√©ploy√©\nn'importe o√π).</p>\n<p>Pour le token, <a href=\"https://gitlab.com/profile/account\">r√©cup√©rez le votre</a> et\nfaites comme pour GitHub. Voici un example avec l'instance GitLab.com que vous\npouvez placer dans votre <code>.bash/zshrc</code>:</p>\n<pre><code class=\"hljs language-sh\"><span class=\"hljs-keyword\">if</span> [[ -f <span class=\"hljs-variable\">$HOME</span>/.gitlab_token ]]\n<span class=\"hljs-keyword\">then</span>\n  <span class=\"hljs-built_in\">export</span> GITLAB_API_PRIVATE_TOKEN=$(cat <span class=\"hljs-variable\">$HOME</span>/.gitlab_token)\n<span class=\"hljs-keyword\">fi</span>\n<span class=\"hljs-built_in\">export</span> GITLAB_API_ENDPOINT=<span class=\"hljs-string\">&quot;https://gitlab.com/api/v3&quot;</span>\n</code></pre>\n<h3>Bitbucket</h3>\n<p>Le <a href=\"https://bitbucket.org/zhemao/bitbucket-cli\">CLI Bitbucket</a> est disponible\nvia <a href=\"https://pip.pypa.io/en/stable/\">pip</a> :</p>\n<pre><code class=\"hljs language-sh\">pip install bitbucket-cli\n</code></pre>\n<p>(Vous aurez peut-√™tre besoin de <code>sudo pip install</code> si vous utilisez la version\nmacOS de Python.)</p>\n<p>BitBucket ne fonctionne pas bien avec un token et la 2FA n'est pas pratique (et\naccessoirement\n<a href=\"https://bitbucket.org/zhemao/bitbucket-cli/issues/25/create-issue-ssh-not-taken-in\">est impossible √† utiliser en ssh</a>).\nIl faudra faire avec login/mot de passe √† chaque fois, √† moins que\n<a href=\"https://bitbucket.org/zhemao/bitbucket-cli#markdown-header-configuration\">vous mettiez en clair votre mot de passe dans un fichier</a>.</p>\n<hr />\n<p>Maintenant qu'on a les outils, on va cr√©√©r des d√©p√¥ts sur chaque plateforme.</p>\n<h2>Cr√©√©r des d√©p√¥ts sur GitHub, GitLab &amp; Bitbucket en CLI</h2>\n<p>Les commandes ci-dessous assument que votre nom d'utilisateur est le m√™me sur\nchaque service. Si ce n'est pas le cas, pensez √† ajuster les commandes.</p>\n<p>Nous allons cr√©er/r√©utiliser un dossier, initialiser un d√©p√¥t si ce n'est pas\nle cas, et le mettre en ligne sur chaque service.</p>\n<h3>Votre d√©p√¥t git existe</h3>\n<p>On va partir du principe que le nom du dossier est le nom du projet.</p>\n<p>Ouvrez un terminal et faites :</p>\n<pre><code class=\"hljs language-console\">export GIT_USER_NAME=$USER\nexport GIT_REPO_NAME=$(basename $(pwd))\n</code></pre>\n<p>Ajustez les variables si cela ne correspond pas √† ce que nous assumons ici.</p>\n<h3>Vous n'avez pas encore de d√©p√¥t</h3>\n<pre><code class=\"hljs language-console\">export GIT_USER_NAME=$USER\nexport GIT_REPO_NAME=&quot;your-repo&quot;\nmkdir $GIT_REPO_NAME &amp;&amp; cd $GIT_REPO_NAME\ngit init\n</code></pre>\n<h3>Cr√©er un d√©p√¥t sur GitHub en ligne de commande</h3>\n<pre><code class=\"hljs language-console\">hub create\n</code></pre>\n<p>Cette commande va cr√©er le d√©p√¥t et initialiser les remotes.</p>\n<h3>Cr√©er un d√©p√¥t sur GitLab en ligne de commande</h3>\n<pre><code class=\"hljs language-console\">gitlab create_project $GIT_REPO_NAME &quot;{visibility_level: 20}&quot;\n</code></pre>\n<p>(Visibilit√© publique). <a href=\"http://stackoverflow.com/a/31338095/988941\">Source</a></p>\n<p>Nous ajouterons la remote plus tard, cela fait partie de l'astuce. ;)</p>\n<h3>Cr√©er un d√©p√¥t sur Bitbucket en ligne de commande</h3>\n<pre><code class=\"hljs language-console\">bb create --protocol=ssh --scm=git --public $GIT_REPO_NAME\n</code></pre>\n<p><a href=\"http://stackoverflow.com/a/12795747/988941\">Source</a></p>\n<h2>Configurer les remotes</h2>\n<p>En fonction de ce que vous voulez, vous pouvez configurer votre d√©p√¥t de\nplusieurs mani√®res.</p>\n<p>Pour un d√©p√¥t principal et des miroirs, vous pouvez commencer par</p>\n<pre><code class=\"hljs language-console\">git remote set-url origin --add https://gitlab.com/${GIT_USER_NAME}/${GIT_REPO_NAME}.git\ngit remote set-url origin --add https://bitbucket.org/${GIT_USER_NAME}/${GIT_REPO_NAME}.git\n</code></pre>\n<p>V√©rifiez que les commandes sont bonnes en faisant :</p>\n<pre><code class=\"hljs language-console\">git remote -v\n</code></pre>\n<p>√áa devrait vous donner un truc du genre :</p>\n<pre><code>origin  https://github.com/YOU/YOUR-REPO.git (fetch)\norigin  https://github.com/YOU/YOUR-REPO.git (push)\norigin  https://gitlab.com/YOU/YOUR-REPO.git (push)\norigin  https://bitbucket.org/YOU/YOUR-REPO.git (push)\n</code></pre>\n<p>Et maintenant vous pouvez faire <code>git push</code> et √ßa poussera sur tous les d√©p√¥ts\nüôÇ.</p>\n<hr />\n<p>‚ö†Ô∏è <strong>Note : pour forcer SSH √† la place de HTTPS, petite astuce :</strong></p>\n<pre><code class=\"hljs language-console\">git config --global url.ssh://git@github.com/.insteadOf https://github.com/\ngit config --global url.ssh://git@gitlab.com/.insteadOf https://gitlab.com/\ngit config --global url.ssh://git@bitbucket.org/.insteadOf https://bitbucket.org/\n</code></pre>\n<h3>Petit souci, <code>git pull</code> ne va prendre que les commits sur la first remote.</h3>\n<p>Il y a m√™me une incoh√©rence entre <code>git push --all</code> (pousser toutes les branches\nsur toutes les remotes) et <code>git pull --all</code> (r√©cup√©rer toutes les branches\ndepuis la premi√®re remote).</p>\n<p><a href=\"https://astrofloyd.wordpress.com/2015/05/05/git-pushing-to-and-pulling-from-multiple-remote-locations-remote-url-and-pushurl/\">Vous trouverez plus d'infos sur comment configurer votre d√©p√¥t pour pouvoir push/pull depuis toutes les sources</a>.</p>\n<p><em>en gros : on va ajouter d'autres remotes pour pouvoir pull facilement.</em></p>\n<pre><code class=\"hljs language-console\">git remote add origin-gitlab https://gitlab.com/${GIT_USER_NAME}/${GIT_REPO_NAME}.git\ngit remote add origin-bitbucket https://bitbucket.org/${GIT_USER_NAME}/${GIT_REPO_NAME}.git\n</code></pre>\n<p>V√©rifiez que les commandes sont bonnes en faisant :</p>\n<pre><code class=\"hljs language-console\">git remote -v\n</code></pre>\n<p>Cela devrait vous donner un truc du genre :</p>\n<pre><code>origin  ssh://git@github.com/YOU/YOUR-REPO.git (fetch)\norigin  ssh://git@github.com/YOU/YOUR-REPO.git (push)\norigin  ssh://git@gitlab.com/YOU/YOUR-REPO.git (push)\norigin  ssh://git@bitbucket.org/YOU/YOUR-REPO.git (push)\norigin-gitlab   ssh://git@gitlab.com/YOU/YOUR-REPO.git (fetch)\norigin-gitlab   ssh://git@gitlab.com/YOU/YOUR-REPO.git (push)\norigin-bitbucket    ssh://git@bitbucket.org/YOU/YOUR-REPO.git (fetch)\norigin-bitbucket    ssh://git@bitbucket.org/YOU/YOUR-REPO.git (push)\n</code></pre>\n<p>Maintenant vous pourrez <code>git push</code> pour pousser sur toutes les remotes, puis\nfaire <code>git pull --all</code> pour r√©cup√©rer de toutes les remotes.</p>\n<p><strong>L'astuce √† 2 centimes : faites un alias pour <code>pull --all</code>.</strong></p>\n<p>Si vous n'avez qu'une remote sur un projet, √ßa ne changera rien, mais\n√ßa fonctionnera si vous en avez plus d'une.</p>\n<p>Dans votre <code>.gitconfig</code> :</p>\n<pre><code class=\"hljs language-ini\"><span class=\"hljs-attr\">g</span> = pull --all\n<span class=\"hljs-attr\">p</span> = push\n</code></pre>\n<p>Et maintenant vous pouvez utiliser <code>git g</code> pour pull et <code>git p</code> pour push.</p>\n<h3>Pull depuis plusieurs remotes avec des commits diff√©rents</h3>\n<p>Un petit edge case peut se r√©v√©ler probl√©matique : une PR merg√©e sur GitHub et une\nsur GitLab, √† peu pr√®s en m√™me temps. Vous allez pouvoir r√©cup√©rer tout √ßa\nfacilement (pour peu que vous utilisiez\n<a href=\"https://github.com/MoOx/setup/blob/60ec182707168e4cf9ffcb2d0351dc0ce2eac7ed/dotfiles/.gitconfig#L30-L31\"><code>pull --rebase</code> par d√©faut</a>)\nmais quand vous allez vouloir pousser, sans force push, √ßa va avoir du mal.</p>\n<p>C'est le seul petit cas probl√©matique. Si vous faites attention quand vous\nacceptez des PR/MR, vous ne devriez pas le rencontrer souvent.</p>\n<h4>Note √† propos des force push</h4>\n<p>Si vous rencontrez ce cas et que vous voulez force push pour arranger le tout,\nfaites attention que votre branche (coucou master) ne soit pas prot√©g√©e durant\ncette manipulation.</p>\n<h6>GitHub</h6>\n<pre><code>https://github.com/${GIT_USER_NAME}/${GIT_REPO_NAME}/settings/branches\n</code></pre>\n<h5>GitLab</h5>\n<pre><code>https://gitlab.com/${GIT_USER_NAME}/${GIT_REPO_NAME}/protected_branches\n</code></pre>\n<p>GitLab prot√®ge la branche master <strong>par d√©faut</strong>. Donc si vous ne changez rien, vous\nne pourrez pas force push.</p>\n<p>Souvent quand je commence un projet j'ai tendance √† faire un petit force push\nsur le premier commit, le temps de faire passer la CI par exemple. Ne me jugez\npas. <strong>Vous voil√† pr√©venus</strong>.</p>\n<h2>Pour les d√©p√¥ts GitHub existant</h2>\n<p>Je n'ai pas trouv√© de moyen automatis√© d'appliquer cette technique pour tous mes\nd√™pots d'un coup. Du coup je fais √ßa petit √† petit quand je bosse sur un projet\nqui n'est pas encore &quot;redond√©&quot;. J'utilise cette article en guise de m√©mo.</p>\n<p>Vous pourrez √©ventuellement √™tre int√©ress√©s par ces posts</p>\n<ul>\n<li><a href=\"https://pypi.python.org/pypi/github2gitlab\">https://pypi.python.org/pypi/github2gitlab</a></li>\n<li><a href=\"https://github.com/xuhdev/backup-on-the-go\">https://github.com/xuhdev/backup-on-the-go</a></li>\n</ul>\n<h2>FAQ</h2>\n<h3>G√©rer les issues et PR/MR</h3>\n<p>Je n'ai pas de silver-bullet pour √ßa. Pour l'instant j'utilise un d√©p√¥t, souvent\nGitHub en principal, et les autres ne sont que des copies sans issues‚Ä¶ Mais\nbon, en cas de licorne rose (GitHub down), j'ai l'air moins con ! C'est toute l'id√©e de cette\napproche, m√™me si elle est perfectible : ne pas √™tre bloqu√© par un service.</p>\n<h3>Faire un commit depuis l'UI Web</h3>\n<p>Pas un soucis, faut juste y penser. Et la prochaine fois que vous avez votre CLI\nen main, pull + push et tout sera en ordre.</p>\n<hr />\n<h2>tl;dr</h2>\n<p><strong>La premi√®re fois</strong> installez quelques d√©pendances :</p>\n<pre><code class=\"hljs language-console\">brew install hub\ngem install gitlab\npip install bitbucket-cli\n</code></pre>\n<p>Note : soyez s√ªrs d'avoir les bons tokens en tant que variable d'environnement ;\nvoir au d√©but de ce post pour les d√©tails.</p>\n<p>(Pensez aussi √† configurer un alias git pour <code>pull --all</code> si vous voulez pull\ntoutes les remotes par d√©faut.)</p>\n<h3>Pour chaque d√©p√¥t :</h3>\n<ol>\n<li>exportez votre nom d'utilisateur (j'assume que vous ayez le m√™me sur chaque\nplateforme)</li>\n</ol>\n<pre><code class=\"hljs language-console\">export GIT_USER_NAME=$USER\n</code></pre>\n<ol start=\"2\">\n<li>Pour les nouveaux d√©p√¥ts (si votre d√©p√¥t existe d√©j√† sur GitHub, sautez\ncette √©tape)</li>\n</ol>\n<pre><code class=\"hljs language-console\">export GIT_REPO_NAME=your-repo\nmkdir $GIT_REPO_NAME &amp;&amp; cd $GIT_REPO_NAME\ngit init\nhub create\n</code></pre>\n<ol start=\"3\">\n<li>Pour les d√©p√¥ts existants sur GitHub</li>\n</ol>\n<pre><code class=\"hljs language-console\">export GIT_REPO_NAME=$(basename $(pwd))\ngitlab create_project $GIT_REPO_NAME &quot;{visibility_level: 20}&quot;\nbb create --protocol=ssh --scm=git --public $GIT_REPO_NAME\n</code></pre>\n<p>Ensuite, on ajoute les remotes</p>\n<pre><code>git remote set-url origin --add https://gitlab.com/${GIT_USER_NAME}/${GIT_REPO_NAME}.git\ngit remote set-url origin --add https://bitbucket.org/${GIT_USER_NAME}/${GIT_REPO_NAME}.git\ngit remote add origin-gitlab https://gitlab.com/${GIT_USER_NAME}/${GIT_REPO_NAME}.git\ngit remote add origin-bitbucket https://bitbucket.org/${GIT_USER_NAME}/${GIT_REPO_NAME}.git\n</code></pre>\n<ol start=\"4\">\n<li>Puis on check que tout va bien</li>\n</ol>\n<pre><code class=\"hljs language-console\">git remote -v\n</code></pre>\n<p>Vous devriez avoir un truc du genre</p>\n<pre><code>origin  ssh://git@github.com/YOU/YOUR-REPO.git (fetch)\norigin  ssh://git@github.com/YOU/YOUR-REPO.git (push)\norigin  ssh://git@gitlab.com/YOU/YOUR-REPO.git (push)\norigin  ssh://git@bitbucket.org/YOU/YOUR-REPO.git (push)\norigin-bitbucket        ssh://git@bitbucket.org/YOU/YOUR-REPO.git (push)\norigin-bitbucket        ssh://git@bitbucket.org/YOU/YOUR-REPO.git (fetch)\norigin-gitlab   ssh://git@gitlab.com/YOU/YOUR-REPO.git (fetch)\norigin-gitlab   ssh://git@gitlab.com/YOU/YOUR-REPO.git (push)\n</code></pre>\n<p>üòá Maintenant vous n'avez plus qu'√† <code>git push</code> et <code>git pull --all</code> !</p>\n<h2>Bonus : badges</h2>\n<p>Vous pouvez ajouter des petits badges pour exposer la redondance sur la\ndocumentation de votre projet.</p>\n<pre><code class=\"hljs language-markdown\">[<span class=\"hljs-string\">![Repo on GitHub</span>](<span class=\"hljs-link\">https://img.shields.io/badge/repo-GitHub-3D76C2.svg</span>)](<span class=\"hljs-link\">https://github.com/YOU/YOUR-REPO</span>)\n[<span class=\"hljs-string\">![Repo on GitLab</span>](<span class=\"hljs-link\">https://img.shields.io/badge/repo-GitLab-6C488A.svg</span>)](<span class=\"hljs-link\">https://gitlab.com/YOU/YOUR-REPO</span>)\n[<span class=\"hljs-string\">![Repo on Bitbucket</span>](<span class=\"hljs-link\">https://img.shields.io/badge/repo-BitBucket-1F5081.svg</span>)](<span class=\"hljs-link\">https://bitbucket.org/YOU/YOUR-REPO</span>)\n</code></pre>\n<p><strong>Ajustez <code>YOU/YOUR-REPO</code> √† votre besoin</strong>.</p>\n<p>√áa ressemblera √† √ßa</p>\n<p><a href=\"https://github.com/YOU/YOUR-REPO\"><img src=\"https://img.shields.io/badge/repo-GitHub-3D76C2.svg\" alt=\"Repo on GitHub\" /></a>\n<a href=\"https://gitlab.com/YOU/YOUR-REPO\"><img src=\"https://img.shields.io/badge/repo-GitLab-6C488A.svg\" alt=\"Repo on GitLab\" /></a>\n<a href=\"https://bitbucket.org/YOU/YOUR-REPO\"><img src=\"https://img.shields.io/badge/repo-BitBucket-1F5081.svg\" alt=\"Repo on Bitbucket\" /></a></p>\n<p>J'ai mis en ligne\n<a href=\"https://github.com/MoOx/git-init\">ces instructions r√©sum√©es sur un d√©p√¥t</a>, peut-√™tre\nen ferais-je un script, qui sait‚Ä¶ üòÑ. Enfin trois d√©p√¥ts !</p>\n<ul>\n<li><a href=\"https://github.com/MoOx/git-init\">https://github.com/MoOx/git-init</a></li>\n<li><a href=\"https://gitlab.com/MoOx/git-init\">https://gitlab.com/MoOx/git-init</a></li>\n<li><a href=\"https://bitbucket.org/MoOx/git-init\">https://bitbucket.org/MoOx/git-init</a></li>\n</ul>\n"}