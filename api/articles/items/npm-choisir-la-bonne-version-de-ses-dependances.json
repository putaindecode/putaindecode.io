{"slug":"npm-choisir-la-bonne-version-de-ses-dependances","filename":"2014-05-12-npm-choisir-la-bonne-version-de-ses-dependances","title":"npm: choisir la bonne version de ses d√©pendances","date":"Mon, 12 May 2014 00:00:00 GMT","draft":false,"meta":{"date":"2014-05-12T00:00:00.000Z","title":"npm: choisir la bonne version de ses d√©pendances","author":"kud","oldSlug":"npm/versions-dependances","slug":"npm-choisir-la-bonne-version-de-ses-dependances"},"body":"<p>Pas plus tard qu'hier, alors que je travaillais tranquillement, apparu\nsoudainement un bug dans mon <em>workflow</em> de <em>build</em>. Il ne m'√©tait plus possible\navec <a href=\"https://github.com/gruntjs/grunt-contrib-clean\">grunt-contrib-clean</a> de\nsupprimer des fichiers. Hmmm, ballot, car sans la suppression, mon <em>workflow</em>\ndevenait tout bancal. Bien. Il me fallut remonter la rivi√®re - comme souvent, en\ntant que d√©veloppeur - afin de constater o√π √©tait le bug. Je suis alors tomb√©\nsur <a href=\"https://github.com/isaacs/rimraf\">rimraf</a> (bon c'√©tait pas bien loin) qui\ns'√©tait vu √™tre mis √† jour il y a √† peine 12 heures, comprenant un bug.</p>\n<h2>Contexte</h2>\n<p>Bon, vous voyez le topo ?</p>\n<pre><code>{\n  \"name\": \"grunt-contrib-clean\",\n  \"dependencies\": {\n    \"rimraf\": \"~2.2.1\"\n  }\n}\n</code></pre>\n<p><a href=\"https://github.com/gruntjs/grunt-contrib-clean\">grunt-contrib-clean</a> qui\ncontient en <em>dependencies</em> <a href=\"https://github.com/isaacs/rimraf\">rimraf</a> avec une\nversion buggu√©e. Oh la belle affaire. Oui car <code>~2.2.1</code> veut dire\n&quot;<a href=\"https://github.com/isaacs/node-semver#ranges\">Raisonnablement proche de 2.2.1</a>&quot;,\nce qui se traduit par t√©l√©charger la derni√®re version en <code>2.2.x</code>, soit la\n<code>2.2.7</code> (celle buggu√©e) lorsque je mis √† jour le package\n<a href=\"https://github.com/gruntjs/grunt-contrib-clean\">grunt-contrib-clean</a>.</p>\n<h2>Le hic</h2>\n<p>Une question m'est venue : comment faire en sorte de figer la version de\n<a href=\"https://github.com/isaacs/rimraf\">rimraf</a> qui est une d√©pendance de d√©pendance\n?</p>\n<p>Ha ! Pas √©vident comme √ßa.</p>\n<p>J'ai d'abord essay√© sans trop d'espoir de t√©l√©charger\n<a href=\"https://github.com/isaacs/rimraf\">rimraf</a> lui-m√™me en <code>2.2.6</code> mais vu que\nchaque d√©pendance √† ses propres d√©pendances et qu'elles ne se les partagent\npas... c'√©tait peine perdue.</p>\n<p>J'ai donc cherch√©, cherch√©, et je suis tomb√© sur\n<a href=\"https://www.npmjs.org/doc/cli/npm-shrinkwrap.html\">npm-shrinkwrap</a>: &quot;Lock down\ndependency versions&quot;. Bingo !</p>\n<h2>npm-shrinkwrap, la solution pour figer vos dep√©ndances, toutes vos d√©pendances</h2>\n<p><a href=\"https://www.npmjs.org/doc/cli/npm-shrinkwrap.html\">npm-shrinkwrap</a> va vous\npermettre de d√©finir avec pr√©cision chaque version de chaque d√©pendance.</p>\n<p>Pour cela, faites d'abord un <code>npm install</code> (si vous avez √©videmment un\n<code>package.json</code>) afin d'installer vos <code>node_modules</code>. Une fois cela fait, lancez\n<code>npm shrinkwrap</code> qui cr√©era le fichier <code>npm-shrinkwrap.json</code> qui comprendra\ntoutes les d√©finitions de chaque d√©pendance.</p>\n<h3>Figer une d√©pendance de d√©pendance</h3>\n<p>Simple, regardez :</p>\n<pre><code>{\n  \"name\": \"my-project\",\n  \"version\": \"1.0.0\",\n  \"dependencies\": {\n    \"grunt-contrib-clean\": {\n      \"version\": \"0.5.0\",\n      \"from\": \"grunt-contrib-clean@~0.5.*\",\n      \"dependencies\": {\n        \"rimraf\": {\n          \"version\": \"2.2.6\",\n          \"from\": \"rimraf@~2.2.1\",\n          \"resolved\": \"https://registry.npmjs.org/rimraf/-/rimraf-2.2.6.tgz\"\n        }\n      }\n    }\n  }\n}\n</code></pre>\n<p>J'ai d√©fini la version de <a href=\"https://github.com/isaacs/rimraf\">rimraf</a> dans\n<code>dependencies.grunt-contrib-clean.dependencies.rimraf</code>.</p>\n<p>Bon, je ne connais pas tout par coeur non plus, npm-shrinkwrap vous √©crira la\ntotalit√© du fichier avec toutes les d√©finitions mais j'ai volontairement tout\nsupprim√© et gard√© uniquement la partie\n<a href=\"https://github.com/gruntjs/grunt-contrib-clean\">grunt-contrib-clean</a> car seule\ncette partie est √† figer. Quand je dis supprimer, je parle r√©ellement dans le\nfichier final, pas juste ici dans l'article.</p>\n<p>Vous aurez toute l'explication de npm-shrinkwrap sur la\n<a href=\"https://www.npmjs.org/doc/cli/npm-shrinkwrap.html\">documentation officielle [en]</a>.</p>\n<h2>Choisir la bonne strat√©gie de version</h2>\n<p>Parce qu'il est important de savoir quelle version exacte nous souhaitons\ninstaller dans notre projet, il faut d√©finir avec pr√©cisions ces versions dans\n<code>package.json</code>.</p>\n<p>Vous pouvez avoir <code>1.2.1</code> ou encore <code>~1.4.6</code> ou bien encore <code>^2.3.1</code>. Mais que\nveulent dire <code>^</code> ou <code>~</code> ?</p>\n<ul>\n<li><code>1.2.1</code> : cette version exacte</li>\n<li><code>~1.4.6</code> : raisonnablement proche de <code>1.4.6</code></li>\n<li><code>^2.3.1</code> : compatible avec <code>2.3.1</code></li>\n</ul>\n<p>Il est clair que lu comme √ßa, le plus int√©ressant est le <code>^</code> et c'est justement\n<a href=\"http://fredkschott.com/post/2014/02/npm-no-longer-defaults-to-tildes/\">celui qui est choisi maintenant [en]</a>\nlorsque l'on fait un <code>npm install --save</code>. Cool non ?!</p>\n<p>Pour plus d'information sur la d√©finition des versions,\n<a href=\"https://github.com/isaacs/node-semver#ranges\">c'est par l√†</a> (Oh mon dieu, il a\nfait un lien avec un &quot;cliquez ici&quot;).</p>\n<p>Bon. C'est bon ? Vous avez tout compris ? Okay, vous pouvez passer √†\n<a href=\"/fr/articles/npm/napa/\"><strong>napa</strong></a> maintenant qui vous aidera grandement sur le\nt√©l√©chargement de projets n'ayant pas de <code>package.json</code>.</p>\n<p>En ce qui concerne npm, je m'arr√™te l√†, et vous propose une petite solution afin\nd'augmenter la vitesse de vos installations de node modules.</p>\n<h2>Bonus</h2>\n<p>Envie d'acc√©l√©rer vos installations npm ? Je vous conseille\n<a href=\"https://github.com/vvo/npm-pkgr\">npm-pkgr</a>.</p>\n<p>Il hashera votre <code>package.json</code> pour savoir s'il a √©t√© modifi√© ou non, et en\nfonction de √ßa, il lancera <code>npm install</code> ou non. Sacr√© gain de temps (surtout si\nvous faites des <code>npm install</code> √† chaque <em>deploy</em>).</p>\n<p>You are now a npm master. üë®</p>\n"}