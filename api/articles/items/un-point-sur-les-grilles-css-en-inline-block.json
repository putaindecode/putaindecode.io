{"slug":"un-point-sur-les-grilles-css-en-inline-block","filename":"2014-06-13-un-point-sur-les-grilles-css-en-inline-block","title":"Un point sur les grilles CSS en inline-block","date":"Fri, 13 Jun 2014 00:00:00 GMT","draft":false,"meta":{"date":"2014-06-13T00:00:00.000Z","title":"Un point sur les grilles CSS en inline-block","author":"lionelB","oldSlug":"css/grilles/inline-block","slug":"un-point-sur-les-grilles-css-en-inline-block"},"body":"<p>Les grilles sont devenues incontournables pour le layout d'un site.\n<a href=\"http://justifygrid.com/#methodology\">Plusieurs</a>\n<a href=\"https://github.com/suitcss/components-grid\">méthodes</a>\n<a href=\"http://www.palantir.net/blog/responsive-design-s-dirty-little-secret\">existent</a>\nen attendant de pouvoir utiliser le Graal,\n<a href=\"http://dev.w3.org/csswg/css-grid/\">CSS3 grid layout</a>.</p>\n<p>Mais en attendant, on bricole. Et une des solutions que j'aime bien consiste à\nutiliser des inline-block, car elle offre plusieurs avantages pratiques :</p>\n<ul>\n<li>On peut simplement renverser la grille grâce à la propriété <code>direction:rtl;</code>\nce qui est particulièrement pratique sur des sites qui doivent supporter des\nlangues dont le sens de lecture va de droite à gauche.</li>\n<li>les éléments en inline-block peuvent utiliser la propriété <code>vertical-align</code>.</li>\n<li>les éléments de la grilles reste dans le flux, ce qui évite l'utilisation de\nclearfix.</li>\n</ul>\n<p>Ce dernier point est aussi une source de problèmes puisque notre <code>.Grid</code>\ncontient non seulement nos éléments de grille <code>.Grid-cell</code> mais aussi quelques\ncaractères espace ça et là entre les noeuds enfants.</p>\n<p>De la même manière qu'un espaces sépare 2 mots, on retrouve ces espaces entre\nnos blocs. Ces caractères proviennent des espaces et autre sauts de lignes qu'on\ninsère dans le code source pour formater notre document.</p>\n<p>Voici donc un aperçu des différents moyens de se débarasser de ces espaces, afin\nque tout les éléments de notre grille restent à leur place.</p>\n<h2>Supprimer les espaces entre les tag <code>.Grid-cell</code></h2>\n<pre><code><div class=\"Grid\">\n  <div class=\"Grid-cell\">...</div><div class=\"Grid-cell\">...</div><div class=\"Grid-cell\">...</div>\n</div>\n</code></pre>\n<p>Une méthode pas forcément très lisible mais qui est robuste. Soyons créatifs, on\npeut aussi faire comme ça, même si le formatage en prend un coup.</p>\n<pre><code><div class=\"Grid\">\n      <div class=\"Grid-cell\">...\n</div><div class=\"Grid-cell\">...\n</div><div class=\"Grid-cell\">...</div>\n</div>\n</code></pre>\n<p>Notez que la première technique peut être facilement mise en place de manière\nautomatique, via une traitement de\n<a href=\"https://github.com/kangax/html-minifier\">minification du code html</a>.</p>\n<h2>Insérer des commentaires html entre les tags <code>.Grid-cell</code></h2>\n<p>La solution est robuste, au prix de quelques caractères supplémentaires. Un\nsurpoids que gzip se fera un plaisir de vous faire oublier ! C'est la méthode\nchoisie dans le framework\n<a href=\"https://github.com/csswizardry/inuit.css/blob/master/objects/_grids.scss\">inuitCss</a>.</p>\n<pre><code><div class=\"Grid\">\n   <div class=\"Grid-cell\">...</div><!--\n--><div class=\"Grid-cell\">...</div><!--\n--><div class=\"Grid-cell\">...</div>\n</div>\n</code></pre>\n<h2>font-size: 0</h2>\n<pre><code>.Grid {\n  font-size: 0;\n}\n.Grid-cell {\n  display: inline-block;\n  font-size: 16px;\n  font-size: 1rem;\n}\n</code></pre>\n<p>L'idée est de faire disparaître les caractères <em>espace</em> situés entre les balises\nenfants en réglant la taille de la police à zéro. Il suffit ensuite de\nré-initialiser la taille sur les noeuds enfants <code>.Grid-cell</code>. Cette méthode est\nutilisée dans <a href=\"https://github.com/suitcss/components-grid\">SUIT Grid</a>.</p>\n<p><em>Attention</em>, si votre scope navigateur va en dessous d'IE9, cette méthode fait\nperdre le bénéfice d'une intégration à base d'em puisque la taille de la typo\nsur les blocs enfants est désormais fixe.</p>\n<h2>Appliquer une marge négative entre les blocs enfants</h2>\n<pre><code>.Grid-cell {\n  margin-right: -4px;\n}\n</code></pre>\n<p>Cette méthode n'est à mon sens pas très robuste, surtout sur des intégrations à\nbase d'em, car on introduit un nombre magique qui dépend de plusieurs paramètre,\ncomme la typo utilisée, sa taille de base, etc. Cette méthode demande donc de\nbien tester puisque les font disponibles ne seront pas les mêmes selon des\néquipements, les OS...</p>\n<h2>La méthode Kellum</h2>\n<p>Ici, la méthode consiste à utiliser une font particulière contenant le caractère\nespace et dont la particularité est d'avoir une largeur nulle. Cette technique\nest décrite dans l'article de\n<a href=\"http://scottkellum.com/2013/10/25/the-new-kellum-method.html\">Scott Kellum</a></p>\n<p>Comme la technique précédente, il suffit d'appliquer la font au conteneur\n<code>.Grid</code> puis de remettre la font-family par defaut pour les enfants\n<code>.Grid-cell</code>. Et ainsi, toutes valeurs relatives en <em>em</em> sont préservées.</p>\n<pre><code>.Grid {\n  display: block;\n  font-family: 'blank-kellum';\n}\n\n.Grid-cell{\n  display: inline-block;\n  width: 33.333333%;\n  font-family:sans-serif;\n}\n</code></pre>\n<p>L'inconvénient de cette technique est qu'elle nécessite le téléchargement d'un\nfichier font particulièr si le navigateur ne supporte pas éléments encodées en\ndata-uri (en gros, en dessous d'ie8). Par contre, si vous utilisez une font\nd'icônes, rien ne vous empêche de combiner les deux, en ajoutant votre icône de\nlargeur nulle avec vos icônes. Voici un aperçu sur\n<a href=\"http://codepen.io/lionelB/pen/fvyjH\">codepen</a></p>\n<h1>Le mot de la fin</h1>\n<p>Non, il n'y a pas vraiment une technique qui sort du lot. Comme toujours, cela\ndépend des navigateurs à supporter, est ce que l'utilisateur pourra\npersonnaliser le layout, qui sera chargé des mise à jour, etc... autant de\npoints qui aideront à choisir la meilleure solution.</p>\n<hr />\n<p>Quelques ressources :</p>\n<ul>\n<li>L'article\n<a href=\"http://css-tricks.com/fighting-the-space-between-inline-block-elements/\">Fighting the space between inline block elements</a>\nsur css-tricks</li>\n<li>L'article\n<a href=\"http://webdesigner-webdeveloper.com/weblog/about-inline-blocks/\">About inline-block</a>\nsur lequel je suis tombé en rédigeant cet article.</li>\n</ul>\n"}