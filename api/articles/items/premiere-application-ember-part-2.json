{"slug":"premiere-application-ember-part-2","filename":"2014-12-09-premiere-application-ember-part-2","title":"Première application Ember (part 2)","date":"Tue, 09 Dec 2014 00:00:00 GMT","draft":false,"meta":{"date":"2014-12-09T00:00:00.000Z","title":"Première application Ember (part 2)","author":"bmeurant","oldSlug":"js/ember/premiere-app/2","slug":"premiere-application-ember-part-2"},"body":"<p>L'<a href=\"/fr/articles/js/ember/premiere-app/1\">article précédent</a> vous a accompagné\npour la création d'une première application <a href=\"http://emberjs.com\">Ember</a>. Mais il faut bien\nreconnaître que l'exemple était très simple et que, du coup, le mérite est\nfaible. Pour se rattraper, on va complexifier un peu les choses.</p>\n<p>Tout comme dans l'article précédent, nous détaillerons régulièrement les\nconcepts mis en œuvre. Parce que vous le valez bien.</p>\n<h2>Sommaire</h2>\n<ul>\n<li><a href=\"#edition-d-une-serie\">Édition d'une série</a>\n<ul>\n<li><a href=\"#routes-imbriquees\">Routes imbriquées</a></li>\n<li><a href=\"#-code-outlets-code-\">Outlets</a></li>\n<li><a href=\"#liens-entre-routes\">Liens entre routes</a></li>\n<li><a href=\"#enregistrement-des-modifications\">Enregistrement des modifications</a></li>\n<li><a href=\"#actions-sur-les-transitions\">Actions sur les transitions</a></li>\n</ul></li>\n<li><a href=\"#relations-avec-ember-data\">Relations avec Ember Data</a></li>\n<li><a href=\"#insertion-d-un-gabarit\">Insertion d'un gabarit</a></li>\n<li><a href=\"#creation-d-une-nouvelle-serie\">Création d'une nouvelle série</a></li>\n<li><a href=\"#conclusion\">Conclusion</a></li>\n</ul>\n<h2>Édition d'une série</h2>\n<p>On veut pouvoir basculer depuis la fiche d'une série vers son édition en mode\n<em>in place</em>. C'est-à-dire en <strong>remplaçant</strong> la zone de visualisation de cette\nfiche par sa zone d'édition.</p>\n<p>On accède à la fiche en mode visualisation à l'URL <code>/series/{id}/</code> et en mode\nédition à l'URL <code>/series/{id}/edit</code>. Évidemment, on reconstruit uniquement la\nzone de la fiche et non l'application entière (et donc ni l'en-tête ni la liste\ndes séries).</p>\n<h3>Routes imbriquées</h3>\n<p>Commençons par définir une nouvelle route <code>edit</code>, sous-route de <code>seriesItem</code> :</p>\n<pre><code class=\"hljs language-js\"><span class=\"hljs-comment\">// /app/router.js</span>\nRouter.map(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{\n  <span class=\"hljs-built_in\">this</span>.resource(<span class=\"hljs-string\">&quot;series&quot;</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{\n    <span class=\"hljs-built_in\">this</span>.route(<span class=\"hljs-string\">&quot;seriesItem&quot;</span>, { <span class=\"hljs-attr\">path</span>: <span class=\"hljs-string\">&quot;/:seriesItem_id&quot;</span> }, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{\n      <span class=\"hljs-built_in\">this</span>.route(<span class=\"hljs-string\">&quot;edit&quot;</span>);\n    });\n  });\n});\n</code></pre>\n<p>Pour que notre nouvelle route affiche la fiche en mode édition, on doit -\n<a href=\"/fr/articles/js/ember/#les-fondamentaux\">rappelez-vous</a> - impérativement suivre\nles\n<a href=\"http://emberjs.com/guides/concepts/naming-conventions/\">conventions de nommage</a>\net créer un gabarit <code>edit.hbs</code> dans le répertoire\n<code>/app/templates/series/series-item/</code> :</p>\n<pre><code class=\"hljs language-html\"><span class=\"hljs-comment\">&lt;!-- /app/templates/series/series-item/edit.hbs` --&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">form</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">&quot;series-details&quot;</span>&gt;</span>\n  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">button</span> <span class=\"hljs-attr\">type</span>=<span class=\"hljs-string\">&quot;submit&quot;</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">&quot;submit&quot;</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">button</span>&gt;</span>\n  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">button</span> <span class=\"hljs-attr\">type</span>=<span class=\"hljs-string\">&quot;cancel&quot;</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">&quot;cancel&quot;</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">button</span>&gt;</span>\n  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">&quot;title&quot;</span>&gt;</span>{{input id=&quot;title&quot; type=&quot;text&quot; value=title}}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">img</span>\n    {{<span class=\"hljs-attr\">bind-attr</span>\n    <span class=\"hljs-attr\">src</span>=<span class=\"hljs-string\">&quot;coverUrl&quot;</span>\n    }}\n    <span class=\"hljs-attr\">alt</span>=<span class=\"hljs-string\">&quot;Series&#x27;s first album cover&quot;</span>\n    <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">&quot;cover&quot;</span>\n  /&gt;</span>\n\n  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">&quot;description&quot;</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">&quot;scriptwriter&quot;</span>&gt;</span>\n      <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">label</span> <span class=\"hljs-attr\">for</span>=<span class=\"hljs-string\">&quot;scriptwriter&quot;</span>&gt;</span>Scriptwriter<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">label</span>&gt;</span>\n      <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">span</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">&quot;control&quot;</span>\n        &gt;</span>{{input id=&quot;scriptwriter&quot; type=&quot;text&quot; value=scriptwriter\n        required=&quot;required&quot;}}&lt;/span\n      &gt;\n    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">&quot;illustrator&quot;</span>&gt;</span>\n      <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">label</span> <span class=\"hljs-attr\">for</span>=<span class=\"hljs-string\">&quot;illustrator&quot;</span>&gt;</span>Illustrator<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">label</span>&gt;</span>\n      <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">span</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">&quot;control&quot;</span>\n        &gt;</span>{{input id=&quot;illustrator&quot; type=&quot;text&quot; value=illustrator}}&lt;/span\n      &gt;\n    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">&quot;publisher&quot;</span>&gt;</span>\n      <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">label</span> <span class=\"hljs-attr\">for</span>=<span class=\"hljs-string\">&quot;publisher&quot;</span>&gt;</span>Publisher<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">label</span>&gt;</span>\n      <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">span</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">&quot;control&quot;</span>\n        &gt;</span>{{input id=&quot;publisher&quot; type=&quot;text&quot; value=publisher}}&lt;/span\n      &gt;\n    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n  <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n\n  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">&quot;summary&quot;</span>&gt;</span>{{textarea value=summary rows=&quot;10&quot;}}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">form</span>&gt;</span>\n</code></pre>\n<p>À ce stade, naviguer sur <code>/series/{@id}/edit</code> ne lève pas d'erreur mais n'a\naucun effet. En effet, on a défini une route imbriquée mais conservé le gabarit\n<code>/app/templates/series/series-item.hbs</code> inchangé. L'activation de la route\n<code>series.seriesItem</code> affiche donc toujours ce gabarit, même dans le cas d'une\nsous-route telle que <code>series.seriesItem.edit</code>.</p>\n<h3><code>outlets</code></h3>\n<p>La solution est à aller chercher du côté du concept d'<code>{{outlet}}</code> défini dans\nl'<a href=\"/fr/articles/js/ember/premiere-app/1/#-code-outlet-code-et-routes-imbriquees\">article précédent</a>.\nUn <code>{{outlet}}</code> est nécessaire <strong>à chaque fois qu'on définit un niveau\nd'imbrication.</strong> Mais comme on veut quand même continuer à afficher la série à\nl'URL <code>/series/{@id}/</code>, on va utiliser la <strong>route implicite</strong>\n<code>series.seriesItem.index</code> (cf.\n<a href=\"/fr/articles/js/ember/premiere-app/1/#routes-et-controleurs-implicites\">article précédent</a>)\net son gabarit, dans lequel on va copier l'ancien contenu de <code>series-item.hbs</code>.</p>\n<pre><code class=\"hljs language-html\"><span class=\"hljs-comment\">&lt;!-- /app/templates/series/series-item/index.hbs --&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">&quot;series-details&quot;</span>&gt;</span>\n  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">h3</span>&gt;</span>{{title}}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">h3</span>&gt;</span>\n  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">img</span>\n    {{<span class=\"hljs-attr\">bind-attr</span>\n    <span class=\"hljs-attr\">src</span>=<span class=\"hljs-string\">&quot;coverUrl&quot;</span>\n    }}\n    <span class=\"hljs-attr\">alt</span>=<span class=\"hljs-string\">&quot;Series&#x27;s first album cover&quot;</span>\n    <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">&quot;cover&quot;</span>\n  /&gt;</span>\n  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">dl</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">&quot;description&quot;</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">dt</span>&gt;</span>scriptwriter<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">dt</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">dd</span>&gt;</span>{{scriptwriter}}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">dd</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">dt</span>&gt;</span>illustrator<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">dt</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">dd</span>&gt;</span>{{illustrator}}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">dd</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">dt</span>&gt;</span>publisher<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">dt</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">dd</span>&gt;</span>{{publisher}}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">dd</span>&gt;</span>\n  <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">dl</span>&gt;</span>\n  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">p</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">&quot;summary&quot;</span>&gt;</span>\n    {{summary}}\n  <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">p</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n</code></pre>\n<p>Le gabarit <code>series-item.hbs</code> est quant à lui modifié car il doit changer en\nfonction de la sous-route activée. Et puisqu'on ne veut rien afficher de plus,\nson contenu se résume à un <code>{{outlet}}</code> :</p>\n<pre><code class=\"hljs language-html\"><span class=\"hljs-comment\">&lt;!-- /app/templates/series-item.hbs --&gt;</span>\n{{outlet}}\n</code></pre>\n<p>Et voilà ! L'affichage de l'URL <code>/series/{@id}/</code> est inchangé alors que l'URL\n<code>/series/{@id}/edit</code> affiche désormais le formulaire d'édition.</p>\n<h3>Liens entre routes</h3>\n<p>Pour pouvoir plus facilement basculer en mode édition, on ajoute un lien vers la\nroute correspondante grâce à <code>link-to</code> (cf.\n<a href=\"http://emberjs.com/guides/templates/links/\">doc officielle</a>).</p>\n<pre><code class=\"hljs language-html\"><span class=\"hljs-comment\">&lt;!-- /app/templates/series/series-item/index.hbs --&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">&quot;series-details&quot;</span>&gt;</span>\n  {{#link-to &#x27;series.seriesItem.edit&#x27; id class=&quot;edit&quot;}}edit{{/link-to}}\n  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">h3</span>&gt;</span>{{title}}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">h3</span>&gt;</span>\n  ...\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n</code></pre>\n<p>On note que la route vers laquelle le lien pointe est préfixée par <code>series</code>\nparce qu'on a défini une route et non une resource. En effet, une ressource\nréinitialise l'espace de nommage et permet donc des noms de routes plus courts.\nPour pouvoir pointer vers <code>seriesItem.edit</code> on aurait donc dû remplacer\n<code>this.route('seriesItem', ...</code> par <code>this.resource('seriesItem', ...</code>.</p>\n<p>On peut désormais éditer notre série. On remarque au passage que la modification\ndu titre de la série le met également à jour en temps réel dans la liste des\nséries grâce au <em>binding</em> (cf.\n<a href=\"/fr/articles/js/ember/premiere-app/1/#-em-bindings-em-et-mise-a-jour-des-gabarits\">article précédent</a>).</p>\n<h3>Enregistrement des modifications</h3>\n<p>Nous allons maintenant rendre opérationnels nos deux boutons d'édition <em>annuler</em>\net <em>valider</em>. Pour cela, on commence par associer des actions à nos boutons :</p>\n<pre><code class=\"hljs language-html\"><span class=\"hljs-comment\">&lt;!-- /app/templates/series/series-item/edit.hbs` --&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">form</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">&quot;series-details&quot;</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">button</span> <span class=\"hljs-attr\">type</span>=<span class=\"hljs-string\">&quot;submit&quot;</span> {{<span class=\"hljs-attr\">action</span> &quot;<span class=\"hljs-attr\">submit</span>&quot;}} <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">&quot;submit&quot;</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">button</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">button</span> <span class=\"hljs-attr\">type</span>=<span class=\"hljs-string\">&quot;reset&quot;</span> {{<span class=\"hljs-attr\">action</span> &quot;<span class=\"hljs-attr\">cancel</span>&quot;}} <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">&quot;cancel&quot;</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">button</span>&gt;</span>\n...\n</code></pre>\n<p>Comme il s'agit de manipulations sur le modèle et de transitions entre routes,\nles actions correspondantes seront traitées par la route.</p>\n<pre><code class=\"hljs language-js\"><span class=\"hljs-comment\">// app/routes/series/series-item/edit.js</span>\n<span class=\"hljs-keyword\">import</span> Ember <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&quot;ember&quot;</span>;\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Ember.Route.extend({\n  <span class=\"hljs-attr\">model</span>: <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{\n    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-built_in\">this</span>.modelFor(<span class=\"hljs-string\">&quot;series.seriesItem&quot;</span>);\n  },\n  <span class=\"hljs-attr\">actions</span>: {\n    <span class=\"hljs-attr\">submit</span>: <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{\n      <span class=\"hljs-built_in\">this</span>.modelFor(<span class=\"hljs-string\">&quot;series.seriesItem.edit&quot;</span>)\n        .save()\n        .then(\n          <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{\n            <span class=\"hljs-built_in\">this</span>.transitionTo(<span class=\"hljs-string\">&quot;series.seriesItem&quot;</span>);\n          }.bind(<span class=\"hljs-built_in\">this</span>),\n        );\n    },\n\n    <span class=\"hljs-attr\">cancel</span>: <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{\n      <span class=\"hljs-built_in\">this</span>.modelFor(<span class=\"hljs-string\">&quot;series.seriesItem.edit&quot;</span>).rollback();\n      <span class=\"hljs-built_in\">this</span>.transitionTo(<span class=\"hljs-string\">&quot;series.seriesItem&quot;</span>);\n    },\n  },\n});\n</code></pre>\n<p>Quelques mots sur ces quelques lignes :</p>\n<ul>\n<li>Dans une <code>route</code>, le modèle courant est récupéré via\n<code>this.modelFor('nomRoute')</code>. Ici, on récupère explicitement le modèle chargé\nautomatiquement (par convention) par la route mère <code>seriesItem</code>. Notez qu'on\naurait pu omettre la récupération du modèle complètement car la route mère\ns'en occupe pour nous.</li>\n<li>Une fois le modèle récupéré, on peut invoquer les méthodes apportées par\n<a href=\"https://github.com/emberjs/data\">Ember Data</a>.</li>\n<li>Pour un <code>cancel</code>, on invoque <code>rollback()</code> : toutes les modifications\neffectuées sont annulées et le modèle est réinitialisé.</li>\n<li>Pour un <code>submit</code>, on invoque un <code>save()</code> qui enregistre les modifications\napportées au modèle dans le <em>magasin</em>\n(<a href=\"http://emberjs.com/api/data/classes/DS.Store.html\">Store</a>) d'<a href=\"https://github.com/emberjs/data\">Ember\nData</a>.</li>\n<li>Les opérations effectuées sur les modèles sont bien souvent asynchrones\npuisque, dans le cas nominal, elles font intervenir des API REST pour\nenregistrer ou mettre à jour les données depuis un serveur. Dans le cas où\nl'on souhaite attendre la fin du traitement pour effectuer une action (comme\nici dans le cas du <code>save</code>), il est nécessaire d'utiliser les <em>promesses</em>\n(<code>promises</code>) qu'<a href=\"https://github.com/emberjs/data\">Ember Data</a> renvoie (<code>.then(...)</code>). Dans le cas\ncontraire, le code serait exécuté avant la fin du traitement et ne permettrait\npas de proposer un retour utilisateur propre (gestion des cas d'erreurs\nnotamment).</li>\n<li>Les transitions entre routes sont possibles via\n<code>this.transitionTo('nomRoute')</code>.</li>\n</ul>\n<h3>Actions sur les transitions</h3>\n<p>Mais je voudrais encore ajouter une dernière petite cerise sur ce gâteau :\nannuler automatiquement toutes les modifications effectuées sur la série dès que\nl'on quitte la route. <a href=\"http://emberjs.com\">Ember</a> prévoit en effet des mécanismes avancés\npour travailler sur les transitions entre routes (cf.\n<a href=\"http://emberjs.com/guides/routing/preventing-and-retrying-transitions/\">doc officielle</a>).\nEn particulier <code>willTransition</code> :</p>\n<pre><code class=\"hljs language-js\"><span class=\"hljs-comment\">// app/routes/series/series-item/edit.js</span>\n  <span class=\"hljs-attr\">actions</span>: {\n    ...\n    <span class=\"hljs-attr\">willTransition</span>: <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\"></span>) </span>{\n      <span class=\"hljs-built_in\">this</span>.modelFor(<span class=\"hljs-string\">&#x27;series.seriesItem.edit&#x27;</span>).rollback();\n      <span class=\"hljs-keyword\">return</span> <span class=\"hljs-literal\">true</span>;\n    }\n  }\n</code></pre>\n<p>L'action est très simple ici mais on imagine facilement comment on pourrait\najouter une confirmation et déterminer, en fonction de la réponse, si l'on doit\ncontinuer la transition ou l'abandonner.</p>\n<h2>Relations avec <a href=\"https://github.com/emberjs/data\">Ember Data</a></h2>\n<p><a href=\"https://github.com/emberjs/data\">Ember Data</a> permet de définir des relations entre nos modèles.\nAjoutons donc des albums à nos séries :</p>\n<p>On définit d'abord une nouvelle entité <code>Album</code> et ses propriétés et on indique\nque cet album était associé à une série via la propriété <code>series</code> et à la\nméthode <code>DS.belongsTo</code> (cf.\n<a href=\"http://emberjs.com/api/data/#method_belongsTo\">doc officielle</a>). Ce qui se\ntraduit plus loin, dans l'initialisation des données par <code>series: 1</code> où 1 est\nl'identifiant de la série en question.</p>\n<pre><code class=\"hljs language-js\"><span class=\"hljs-comment\">// /app/models/album.js</span>\n<span class=\"hljs-keyword\">import</span> DS <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&quot;ember-data&quot;</span>;\n\n<span class=\"hljs-keyword\">var</span> Album = DS.Model.extend({\n  <span class=\"hljs-attr\">title</span>: DS.attr(<span class=\"hljs-string\">&quot;string&quot;</span>),\n  <span class=\"hljs-attr\">publicationDate</span>: DS.attr(<span class=\"hljs-string\">&quot;date&quot;</span>),\n  <span class=\"hljs-attr\">number</span>: DS.attr(<span class=\"hljs-string\">&quot;number&quot;</span>),\n  <span class=\"hljs-attr\">coverName</span>: DS.attr(<span class=\"hljs-string\">&quot;string&quot;</span>, { <span class=\"hljs-attr\">defaultValue</span>: <span class=\"hljs-string\">&quot;default.jpg&quot;</span> }),\n  <span class=\"hljs-attr\">series</span>: DS.belongsTo(<span class=\"hljs-string\">&quot;seriesItem&quot;</span>),\n  <span class=\"hljs-attr\">coverUrl</span>: <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{\n    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-string\">&quot;/assets/images/albums/covers/&quot;</span> + <span class=\"hljs-built_in\">this</span>.get(<span class=\"hljs-string\">&quot;coverName&quot;</span>);\n  }.property(<span class=\"hljs-string\">&quot;coverName&quot;</span>),\n});\n\nAlbum.reopenClass({\n  <span class=\"hljs-attr\">FIXTURES</span>: [\n    {\n      <span class=\"hljs-attr\">id</span>: <span class=\"hljs-number\">1</span>,\n      <span class=\"hljs-attr\">title</span>: <span class=\"hljs-string\">&quot;Somewhere Within the Shadows&quot;</span>,\n      <span class=\"hljs-attr\">publicationDate</span>: <span class=\"hljs-string\">&quot;Nov 2000&quot;</span>,\n      <span class=\"hljs-attr\">number</span>: <span class=\"hljs-number\">1</span>,\n      <span class=\"hljs-attr\">coverName</span>: <span class=\"hljs-string\">&quot;blacksad-1.jpg&quot;</span>,\n      <span class=\"hljs-attr\">series</span>: <span class=\"hljs-number\">1</span>,\n    },\n    {\n      <span class=\"hljs-attr\">id</span>: <span class=\"hljs-number\">2</span>,\n      <span class=\"hljs-attr\">title</span>: <span class=\"hljs-string\">&quot;Arctic-Nation&quot;</span>,\n      <span class=\"hljs-attr\">publicationDate</span>: <span class=\"hljs-string\">&quot;Mar 2003&quot;</span>,\n      <span class=\"hljs-attr\">number</span>: <span class=\"hljs-number\">2</span>,\n      <span class=\"hljs-attr\">coverName</span>: <span class=\"hljs-string\">&quot;blacksad-2.jpg&quot;</span>,\n      <span class=\"hljs-attr\">series</span>: <span class=\"hljs-number\">1</span>,\n    },\n  ],\n});\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Album;\n</code></pre>\n<p>On modifie ensuite le modèle <code>SeriesItem</code> pour indiquer une relation inverse\ngrâce à la propriété <code>albums</code> et à la méthode <code>DS.hasMany</code> (cf.\n<a href=\"http://emberjs.com/api/data/#method_hasMany\">doc officielle</a>) puis affecter la\nliste des identifiants des albums à la série via <code>albums: [1, 2]</code> :</p>\n<pre><code class=\"hljs language-js\"><span class=\"hljs-comment\">// /app/models/series-item.js</span>\n<span class=\"hljs-keyword\">import</span> DS <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&#x27;ember-data&#x27;</span>;\n\n<span class=\"hljs-keyword\">var</span> SeriesItem = DS.Model.extend({\n    <span class=\"hljs-attr\">title</span>               : DS.attr(<span class=\"hljs-string\">&#x27;string&#x27;</span>, {<span class=\"hljs-attr\">defaultValue</span>: <span class=\"hljs-string\">&#x27;New Series&#x27;</span>}),\n    ...\n    <span class=\"hljs-attr\">albums</span>              : DS.hasMany(<span class=\"hljs-string\">&#x27;album&#x27;</span>, {<span class=\"hljs-attr\">async</span>: <span class=\"hljs-literal\">true</span>})\n});\n\nSeriesItem.reopenClass({\n    <span class=\"hljs-attr\">FIXTURES</span>: [{\n    <span class=\"hljs-attr\">id</span>: <span class=\"hljs-number\">1</span>,\n    ...\n    <span class=\"hljs-attr\">albums</span>: [<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">2</span>]\n    }, ...\n]});\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> SeriesItem;\n</code></pre>\n<h2>Insertion d'un gabarit</h2>\n<p>Maintenant qu'on a des albums pour nos séries, on serait bien intéressé de les\nvoir s'afficher. Seulement voilà, on veut juste les afficher à côté de la\nvisualisation d'une série. On ne veut rien proposer d'autre pour ces albums que\nle <em>binding</em> des propriétés et leur affichage. Pas besoin de route ou de\ncontrôleur. On va pour cela utiliser un outil particulier permettant simplement\nd'insérer (d'afficher) un gabarit au sein d'une route existante via le <em>helper</em>\n: <code>render</code> (cf.\n<a href=\"http://emberjs.com/guides/templates/rendering-with-helpers/#toc_the-code-view-code-helper\">doc officielle</a>).</p>\n<p>On modifie donc le gabarit <code>/series/series-item.hbs</code> pour qu'à côté de la fiche\nd'une série soit affichée la liste de ses albums :</p>\n<pre><code class=\"hljs language-html\"><span class=\"hljs-comment\">&lt;!-- /app/templates/series/series-item.hbs --&gt;</span>\n\n{{outlet}}\n\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">&quot;series-albums&quot;</span>&gt;</span>\n  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">ul</span>&gt;</span>\n    {{#each album in albums}} {{render &#x27;partials/albumItem&#x27; album}} {{/each}}\n  <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">ul</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n</code></pre>\n<pre><code class=\"hljs language-html\"><span class=\"hljs-comment\">&lt;!-- /app/templates/partials/album-item.hbs --&gt;</span>\n\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">li</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">&quot;album&quot;</span>&gt;</span>\n  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">img</span> {{<span class=\"hljs-attr\">bind-attr</span> <span class=\"hljs-attr\">src</span>=<span class=\"hljs-string\">&quot;coverUrl&quot;</span> }} <span class=\"hljs-attr\">alt</span>=<span class=\"hljs-string\">&quot;Album cover&quot;</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">&quot;cover&quot;</span> /&gt;</span>\n\n  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">&quot;description&quot;</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">h4</span>&gt;</span>{{title}}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">h4</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">dl</span>&gt;</span>\n      <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">dt</span>&gt;</span>volume<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">dt</span>&gt;</span>\n      <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">dd</span>&gt;</span>{{number}}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">dd</span>&gt;</span>\n      <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">dt</span>&gt;</span>date<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">dt</span>&gt;</span>\n      <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">dd</span>&gt;</span>{{publicationDate}}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">dd</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">dl</span>&gt;</span>\n  <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">li</span>&gt;</span>\n</code></pre>\n<h2>Création d'une nouvelle série</h2>\n<p>Histoire de terminer en beauté on va ajouter vite fait la création d'une série.</p>\n<p>Comme on commence à avoir l'habitude, on fait ça en deux coups de cuillère à pot\n:</p>\n<pre><code class=\"hljs language-js\"><span class=\"hljs-comment\">// /app/router.js</span>\nRouter.map(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{\n  <span class=\"hljs-built_in\">this</span>.resource(<span class=\"hljs-string\">&quot;series&quot;</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{\n    <span class=\"hljs-built_in\">this</span>.route(<span class=\"hljs-string\">&quot;seriesItem&quot;</span>, { <span class=\"hljs-attr\">path</span>: <span class=\"hljs-string\">&quot;/:seriesItem_id&quot;</span> }, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{\n      <span class=\"hljs-built_in\">this</span>.route(<span class=\"hljs-string\">&quot;edit&quot;</span>);\n    });\n    <span class=\"hljs-built_in\">this</span>.route(<span class=\"hljs-string\">&quot;create&quot;</span>);\n  });\n});\n</code></pre>\n<pre><code class=\"hljs language-js\"><span class=\"hljs-comment\">// /app/routes/series/create.js</span>\n<span class=\"hljs-keyword\">import</span> Ember <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">&quot;ember&quot;</span>;\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Ember.Route.extend({\n  <span class=\"hljs-attr\">model</span>: <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{\n    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-built_in\">this</span>.store.createRecord(<span class=\"hljs-string\">&quot;seriesItem&quot;</span>);\n  },\n\n  <span class=\"hljs-attr\">renderTemplate</span>: <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{\n    <span class=\"hljs-built_in\">this</span>.render(<span class=\"hljs-string\">&quot;series.seriesItem.edit&quot;</span>);\n  },\n\n  <span class=\"hljs-attr\">actions</span>: {\n    <span class=\"hljs-attr\">submit</span>: <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{\n      <span class=\"hljs-built_in\">this</span>.modelFor(<span class=\"hljs-string\">&quot;series.create&quot;</span>)\n        .save()\n        .then(\n          <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{\n            <span class=\"hljs-built_in\">this</span>.transitionTo(\n              <span class=\"hljs-string\">&quot;series.seriesItem&quot;</span>,\n              <span class=\"hljs-built_in\">this</span>.modelFor(<span class=\"hljs-string\">&quot;series.create&quot;</span>),\n            );\n          }.bind(<span class=\"hljs-built_in\">this</span>),\n        );\n    },\n\n    <span class=\"hljs-attr\">cancel</span>: <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{\n      <span class=\"hljs-built_in\">this</span>.modelFor(<span class=\"hljs-string\">&quot;series.create&quot;</span>).rollback();\n      <span class=\"hljs-built_in\">this</span>.transitionTo(<span class=\"hljs-string\">&quot;series&quot;</span>);\n    },\n\n    <span class=\"hljs-attr\">willTransition</span>: <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{\n      <span class=\"hljs-built_in\">this</span>.modelFor(<span class=\"hljs-string\">&quot;series.create&quot;</span>).rollback();\n      <span class=\"hljs-keyword\">return</span> <span class=\"hljs-literal\">true</span>;\n    },\n  },\n});\n</code></pre>\n<pre><code class=\"hljs language-html\"><span class=\"hljs-comment\">&lt;!-- /app/templates/series.hbs --&gt;</span>\n    ...\n      {{/each}}\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">li</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">&quot;series-item&quot;</span>&gt;</span>\n          {{#link-to &#x27;series.create&#x27; class=&quot;add&quot;}}add{{/link-to}}\n        <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">li</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">ul</span>&gt;</span>\n    ...\n</code></pre>\n<p>Les points importants à noter :</p>\n<ul>\n<li>Le modèle est, cette fois-ci, créé à l'activation de la route via\n<code>this.store.createRecord(...)</code>.</li>\n<li>Comme on ne souhaite pas proposer de gabarit propre pour cette route, on\nutilise <code>renderTemplate</code> pour indiquer à <a href=\"http://emberjs.com\">Ember</a> quel gabarit il doit\nutiliser.</li>\n<li>Les actions <code>submit</code>, <code>cancel</code> et <code>willTransition</code> sont sensiblement les mêmes\nque pour l'édition mais travaillent sur un modèle différent et renvoient vers\nd'autres routes.</li>\n<li>On note le passage du modèle lors de la transition en cas de <code>submit</code>.</li>\n<li>Il serait légitime de se poser la question de réutilisation de code entre ces\ndeux routes, compte tenu des similarités. Ce n'est pas l'objet de l'article\nmais pourrait être envisagé à l'aide d'un <code>mixin</code> partagé (cf.\n<a href=\"http://emberjs.com/api/classes/Ember.Mixin.html\">doc officielle</a>).</li>\n</ul>\n<h2>Conclusion</h2>\n<p>Au travers de cet article et des précédents, j'espère vous avoir donné un aperçu\ndu modèle de développement que propose <a href=\"http://emberjs.com\">Ember</a>. Vous avez compris,\nj'espère, qu'<a href=\"http://emberjs.com\">Ember</a> est un véritable framework avec des opinions fortes\net qu'il doit être pris comme tel ou laissé de côté pour une solution plus\nlégère selon vos besoins.</p>\n<p>Mais j'ai également essayé d'aller plus en profondeur sur certains aspects et de\nmontrer des cas d'utilisation concrets. Ce dernier article montre qu'il est\négalement possible de fournir à <a href=\"http://emberjs.com\">Ember</a> des configurations explicites\nafin d'aller plus loin que les conventions par défaut.</p>\n<p>Maintenant, vous n'avez plus d'excuses... Vous ne pourrez pas dire que vous ne\nconnaissiez pas.</p>\n<p><em>Note: les sources de l'application exemple sont\n<a href=\"https://github.com/bmeurant/ember-articles/tree/premiere-app-ember-suite\">disponibles sur github</a>.</em></p>\n"}