{"slug":"responsive-sans-media-queries","filename":"2019-10-30-responsive-sans-media-queries","title":"Du responsive sans media queries","date":"Wed, 30 Oct 2019 00:00:00 GMT","draft":false,"meta":{"date":"2019-10-30T00:00:00.000Z","title":"Du responsive sans media queries","author":"MoOx","slug":"responsive-sans-media-queries"},"body":"<p>Aujourd'hui, il est assez difficile d'imaginer faire des designs web responsive\nsans avoir recours aux media queries. Cette idée vieille de 1994, devenue\nrecommendation du W3C en 2012 (une fois supportée par tous les navigateurs) a\npris son temps et a su s'imposer comme l'outil de référence pour faire du design\nadaptatif.</p>\n<p>À tel point qu'il parait impossible de faire du responsive sans media query\ndans l'imaginaire collectif.</p>\n<h2>Pourquoi voudrais-tu faire du responsive sans media query ?</h2>\n<p>Il faut pas se le cacher : travailler avec les media queries n'est pas toujours\névident. Cela implique pour chaque &quot;morceau&quot; de votre site ou appli qui va\ndevoir s'adapter de prévoir un ou plusieurs breakpoints lié à la taille\ndisponible de votre viewport. Écrire du code lié au viewport pour un &quot;composant&quot;\nbas niveau peut paraître clairement étrange.</p>\n<p>Ce côté contre intuitif des media queries m'a toujours dérangé : on se retrouve à cibler\nune taille d’écran, et non pas de cibler la taille disponible pour un élément\ndonné.</p>\n<p>Lorsque l'on creuse un peu, on tombe souvent sur le concept de &quot;element\nquery&quot;. Le rêve de tout intégrateur web : ce serait la solution à tous les\nproblèmes posés par les media queries.</p>\n<p>Franchement, écrire du code qui permet à un même composant de se retrouver sur\nune même page a 2 endroits mais avec des dimensions différentes ça serait pas\ncool ? Pas qu'un peu.</p>\n<p>Alors il y a bien quelques techniques à ce jour notamment\n<a href=\"https://emails.hteumeuleu.fr/2016/02/fab-four-emails-responsive-sans-media-queries/\">&quot;les fab four&quot;</a>\nou encore des tricks à base de floats ou d'autres trucs plus exotiques, mais\nmalheureusement ce n'est pas toujours maintenable ou intuitif.</p>\n<p>Dans notre monde &quot;moderne&quot; (j'en vois déjà certain cracher sur leur écran),\npourquoi ne pas utiliser JavaScript? (voilà vous pouvez essuyer votre écran).\nSérieusement, on pourrait se dire que dans notre contexte, il pourrait être\npertinent de simuler des elements queries à coup de <code>getBoundingClientRect</code>\naccompagné d'un observeur.</p>\n<p>Certain dirons que encore une fois\n<a href=\"/articles/tradeoffs\">tout est question de compromis</a>.</p>\n<p>Mais si on veut faire du rendu côté serveur… Le JavaScript ne sera pas une\nbonne solution (oui ça m'arrive de penser à ce concept).</p>\n<h2>Comment faire du responsive sans media query</h2>\n<p>Rentrons dans le vif du sujet pour celles et ceux qui seraient intéressé·e·s par\ncette opportunité. Voici donc quelques astuces et pratiques que je vais vous\nlivrer.</p>\n<p><strong>Note: afin de mieux profiter du rendu des exemples prévus pour écran large,\npensez à consulter les exemples en paysage si vous êtes sur mobile\n(ou directement sur CodePen qui offre une option de dézoom).\nBah oui, on fait un article sur le responsive, donc regarder sur mobile des\nexemples prévus pour grand écran ça va pas le faire.</strong></p>\n<p>Première chose à bien visualiser : nous allons partir du principe que nous\nvoulons nous contenter de Flexbox. Aujourd'hui supporté par tous les\nnavigateurs, Flexbox est le candidat idéal à ce jour pour faire du code propre\net maintenable.</p>\n<p>Avec Flexbox on peut &quot;juste&quot; faire donc des lignes et des colonnes.</p>\n<p>Pour les colonnes, c’est très souvent peu problématique. Tout simplement par ce\nque l’on scroll le plus souvent verticalement. Je ne vais donc pas spécialement\naborder cette axe là et me concentrer sur l’axe horizontal. Mais en changeant\nd’axe, ces pratiques seront toutes aussi pertinentes selon votre besoin.</p>\n<p>Alors que faire ? On commence par quoi ?</p>\n<p>On va prendre un exemple très simple où je me retrouve avec une ligne et trois\nblocs intérieurs. Dès que c’est possible je veux que ces trois blocs soient sur\nune ligne. Par exemple sur un ordinateur de bureau. Ou un iPad. Ou un smartphone\nsacrément gros. Ou un smartphone en paysage.</p>\n<pre><code class=\"hljs language-html\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">section</span> <span class=\"hljs-attr\">style</span>=<span class=\"hljs-string\">&quot;display: flex;&quot;</span>&gt;</span>\n  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">article</span> <span class=\"hljs-attr\">style</span>=<span class=\"hljs-string\">&quot;flex: 1; height: 50px; background: #fbb;&quot;</span>&gt;</span>1<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">article</span> <span class=\"hljs-attr\">style</span>=<span class=\"hljs-string\">&quot;flex: 1; height: 50px; background: #bfb;&quot;</span>&gt;</span>2<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">article</span> <span class=\"hljs-attr\">style</span>=<span class=\"hljs-string\">&quot;flex: 1; height: 50px; background: #bbf;&quot;</span>&gt;</span>3<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">section</span>&gt;</span>\n</code></pre>\n<div style=\"overflow-x: auto\">\n<iframe\n    allowtransparency=\"true\" allowfullscreen=\"true\" scrolling=\"no\" frameborder=\"no\"\n    height=\"300\" style=\"width: 100%; min-width: 600px;\"\n    title=\"Responsive without MQs, step 1\"\n    src=\"//codepen.io/MoOx/embed/gNjRQr/?height=300&theme-id=light&default-tab=result\"  >\n</iframe>\n</div>\n<p>Si on réduit notre exemple on va donc se retrouver avec ceci. Pas ouf.</p>\n<div style=\"overflow-x: auto\">\n<iframe\n    allowtransparency=\"true\" allowfullscreen=\"true\" scrolling=\"no\" frameborder=\"no\"\n    height=\"300\" style=\"width: 100%; max-width: 300px\"\n    title=\"Responsive without MQs, step 1\"\n    src=\"//codepen.io/MoOx/embed/gNjRQr/?height=300&theme-id=light&default-tab=result\"  >\n</iframe>\n</div>\n<p>Partant de ceci ça va être assez simple de faire la première étape. On va\nrajouter flex-wrap.</p>\n<pre><code class=\"hljs language-html\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">section</span> <span class=\"hljs-attr\">style</span>=<span class=\"hljs-string\">&quot;display: flex; flex-wrap: wrap;&quot;</span>&gt;</span>\n  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">article</span> <span class=\"hljs-attr\">style</span>=<span class=\"hljs-string\">&quot;flex: 1; height: 50px; background: #fbb;&quot;</span>&gt;</span>1<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">article</span> <span class=\"hljs-attr\">style</span>=<span class=\"hljs-string\">&quot;flex: 1; height: 50px; background: #bfb;&quot;</span>&gt;</span>2<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">article</span> <span class=\"hljs-attr\">style</span>=<span class=\"hljs-string\">&quot;flex: 1; height: 50px; background: #bbf;&quot;</span>&gt;</span>3<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">section</span>&gt;</span>\n</code></pre>\n<div style=\"overflow-x: auto\">\n<iframe\n    allowtransparency=\"true\" allowfullscreen=\"true\" scrolling=\"no\" frameborder=\"no\"\n    height=\"300\" style=\"width: 100%; max-width: 300px\"\n    title=\"Responsive without MQs, step 1.1\"\n    src=\"//codepen.io/MoOx/embed/GbBvdv/?height=300&theme-id=light&default-tab=result\"  >\n</iframe>\n</div>\n<p>C’est plutôt moche et pas très réaliste. Ajoutons donc un petit peu de contenu,\net un peu d’espace.</p>\n<p>Avant qu'on me crache dessus car j'ai mis des div en guise de gouttière, je\nsouligne que c'est pour le cas d'école.</p>\n<pre><code class=\"hljs language-html\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">section</span> <span class=\"hljs-attr\">style</span>=<span class=\"hljs-string\">&quot;display: flex; flex-wrap: wrap;&quot;</span>&gt;</span>\n  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">style</span>=<span class=\"hljs-string\">&quot;width: 10px;&quot;</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n\n  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">article</span> <span class=\"hljs-attr\">style</span>=<span class=\"hljs-string\">&quot;flex: 1; background: #fbb;&quot;</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">h2</span> <span class=\"hljs-attr\">style</span>=<span class=\"hljs-string\">&quot;margin: 0; padding: 20px; font: 900 64px monospace;&quot;</span>&gt;</span>Red<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">h2</span>&gt;</span>\n  <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">article</span>&gt;</span>\n\n  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">style</span>=<span class=\"hljs-string\">&quot;width: 20px;&quot;</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n\n  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">article</span> <span class=\"hljs-attr\">style</span>=<span class=\"hljs-string\">&quot;flex: 1; background: #bfb;&quot;</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">h2</span> <span class=\"hljs-attr\">style</span>=<span class=\"hljs-string\">&quot;margin: 0; padding: 20px; font: 900 64px monospace;&quot;</span>&gt;</span>Green<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">h2</span>&gt;</span>\n  <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">article</span>&gt;</span>\n\n  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">style</span>=<span class=\"hljs-string\">&quot;width: 20px;&quot;</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n\n  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">article</span> <span class=\"hljs-attr\">style</span>=<span class=\"hljs-string\">&quot;flex: 1; background: #bbf;&quot;</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">h2</span> <span class=\"hljs-attr\">style</span>=<span class=\"hljs-string\">&quot;margin: 0; padding: 20px; font: 900 64px monospace;&quot;</span>&gt;</span>Blue<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">h2</span>&gt;</span>\n  <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">article</span>&gt;</span>\n\n  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">style</span>=<span class=\"hljs-string\">&quot;width: 10px;&quot;</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">section</span>&gt;</span>\n</code></pre>\n<div style=\"overflow-x: auto\">\n<iframe\n    allowtransparency=\"true\" allowfullscreen=\"true\" scrolling=\"no\" frameborder=\"no\"\n    height=\"300\" style=\"width: 100%; min-width: 600px;\"\n    title=\"Responsive without MQs, step 2\"\n    src=\"//codepen.io/MoOx/embed/pXZrrx/?height=300&theme-id=light&default-tab=result\"  >\n</iframe>\n</div>\n<p>Si on rétrécit l’espace disponible, on aura un rendu qui va tenter de s’adapter\ncomme il peut.</p>\n<div style=\"overflow-x: auto\">\n<iframe\n    allowtransparency=\"true\" allowfullscreen=\"true\" scrolling=\"no\" frameborder=\"no\"\n    height=\"300\" style=\"width: 100%; max-width: 300px;\"\n    title=\"Responsive without MQs, step 2\"\n    src=\"//codepen.io/MoOx/embed/pXZrrx/?height=300&theme-id=light&default-tab=result\"  >\n</iframe>\n</div>\n<p>Imaginons que ce rendu ne soit pas forcément souhaitable dans notre contexte.\nFormulé autrement: <strong>ces marges sont sacrément dégueulasses</strong>.</p>\n<p>Pour être précis, elles ne sont pas adaptées à nos contraintes et au rendu que\nl’on souhaite avoir : on se retrouve avec un bout de marge perdu à un endroit où\nl’on a pas vraiment envie qu’il se trouve.</p>\n<p>Du coup comment qu’on fait ?</p>\n<p>Petite technique facile à mettre en place et efficace : on va placer des\ndemi-marges sur le bloc plutôt qu’utiliser le concept de gouttière. Comme ceci :</p>\n<pre><code class=\"hljs language-html\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">section</span> <span class=\"hljs-attr\">style</span>=<span class=\"hljs-string\">&quot;display: flex; flex-wrap: wrap;&quot;</span>&gt;</span>\n  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">style</span>=<span class=\"hljs-string\">&quot;flex: 1; padding: 0 10px;&quot;</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">article</span> <span class=\"hljs-attr\">style</span>=<span class=\"hljs-string\">&quot;background: #fbb;&quot;</span>&gt;</span>\n      <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">h2</span> <span class=\"hljs-attr\">style</span>=<span class=\"hljs-string\">&quot;margin: 0; padding: 20px; font: 900 64px monospace;&quot;</span>&gt;</span>Red<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">h2</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">article</span>&gt;</span>\n  <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n\n  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">style</span>=<span class=\"hljs-string\">&quot;flex: 1; padding: 0 10px;&quot;</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">article</span> <span class=\"hljs-attr\">style</span>=<span class=\"hljs-string\">&quot;background: #bfb;&quot;</span>&gt;</span>\n      <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">h2</span> <span class=\"hljs-attr\">style</span>=<span class=\"hljs-string\">&quot;margin: 0; padding: 20px; font: 900 64px monospace;&quot;</span>&gt;</span>Green<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">h2</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">article</span>&gt;</span>\n  <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n\n  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">style</span>=<span class=\"hljs-string\">&quot;flex: 1; padding: 0 10px;&quot;</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">article</span> <span class=\"hljs-attr\">style</span>=<span class=\"hljs-string\">&quot;background: #bbf;&quot;</span>&gt;</span>\n      <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">h2</span> <span class=\"hljs-attr\">style</span>=<span class=\"hljs-string\">&quot;margin: 0; padding: 20px; font: 900 64px monospace;&quot;</span>&gt;</span>Blue<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">h2</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">article</span>&gt;</span>\n  <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">section</span>&gt;</span>\n</code></pre>\n<p>Ce changement n’a aucun impact sur le rendu grand format, mais cela va nous\npermettre en petit format d’obtenir le rendu suivant :</p>\n<div style=\"overflow-x: auto\">\n<iframe\n    allowtransparency=\"true\" allowfullscreen=\"true\" scrolling=\"no\" frameborder=\"no\"\n    height=\"300\" style=\"width: 100%; max-width: 300px;\"\n    title=\"Responsive without MQs, step 3\"\n    src=\"//codepen.io/MoOx/embed/NZBvLB/?height=300&theme-id=light&default-tab=result\"  >\n</iframe>\n</div>\n<p>En fonction du contenu intérieur des blocs que vous allez avoir, vous allez\npouvoir utiliser plutôt <code>min-width</code> ou <code>flex-basis</code>. Je vous laisse jouer un peu\navec histoire de vous faire la main.</p>\n<blockquote>\n<p><a href=\"https://codepen.io/MoOx/pen/bPjyVm?editors=1100\">Codepen un peu plus lisible</a></p>\n</blockquote>\n<p>En fait je n’ai que cette astuce.</p>\n<p>Je plaisante à peine. Car si on ajoute à cela le côté malin de\n<code>overflow: hidden</code> pour cacher de l'information optionnelle, on peut faire des\ntrucs assez puissant.</p>\n<p>Regardons ça avec un exemple plus complexe : on va imaginer le header d'un site.</p>\n<p>En appliquant cette technique à l’extrême, (ce qui n’est pas une quantité de\ntravail astronomique, et reste quelque chose de propre et tout à fait\nmaintenable, surtout avec une approche composant et non document) on peut se\nretrouver avec un code très simple, sans media query qui donnerait les rendus suivants :</p>\n<div style=\"overflow-x: auto\">\n<iframe\n    allowtransparency=\"true\" allowfullscreen=\"true\" scrolling=\"no\" frameborder=\"no\"\n    height=\"220\" style=\"width: 100%;\"\n    title=\"Responsive without MQs, real world example\"\n    src=\"//codepen.io/MoOx/embed/WqKBGm/?height=300&theme-id=light&default-tab=result\"  >\n</iframe>\n</div>\n<p><small>Mettez l'exemple ci-dessus avec un zoom à 0.5× pour mieux visualiser</small></p>\n<div style=\"overflow-x: auto\">\n<iframe\n    allowtransparency=\"true\" allowfullscreen=\"true\" scrolling=\"no\" frameborder=\"no\"\n    height=\"220\" style=\"width: 100%; max-width: 360px;\"\n    title=\"Responsive without MQs, real world example\"\n    src=\"//codepen.io/MoOx/embed/WqKBGm/?height=300&theme-id=light&default-tab=result\"  >\n</iframe>\n</div>\n<pre><code class=\"hljs language-html\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">style</span>&gt;</span><span class=\"css\">\n<span class=\"hljs-selector-tag\">Header</span>, <span class=\"hljs-selector-tag\">Header</span> * {\n  <span class=\"hljs-attribute\">box-sizing</span>: border-box;\n  <span class=\"hljs-attribute\">position</span>: relative;\n  <span class=\"hljs-attribute\">display</span>: flex;\n  <span class=\"hljs-attribute\">flex-direction</span>: column;\n}\n\n<span class=\"hljs-selector-class\">.Header</span> {\n  <span class=\"hljs-attribute\">flex-grow</span>: <span class=\"hljs-number\">0</span>;\n  <span class=\"hljs-attribute\">flex-shrink</span>: <span class=\"hljs-number\">0</span>;\n  <span class=\"hljs-attribute\">flex-direction</span>: row;\n  <span class=\"hljs-attribute\">background</span>: <span class=\"hljs-number\">#333</span>;\n  <span class=\"hljs-attribute\">align-items</span>: center;\n}\n\n  <span class=\"hljs-selector-class\">.Logo</span> {\n    <span class=\"hljs-attribute\">flex-grow</span>: <span class=\"hljs-number\">0</span>;\n    <span class=\"hljs-attribute\">flex-shrink</span>: <span class=\"hljs-number\">1</span>;\n    <span class=\"hljs-attribute\">min-width</span>: <span class=\"hljs-number\">80px</span>;\n    <span class=\"hljs-attribute\">height</span>: <span class=\"hljs-number\">80px</span>;\n    <span class=\"hljs-attribute\">flex-direction</span>: row;\n    <span class=\"hljs-attribute\">flex-wrap</span>: wrap;\n    <span class=\"hljs-attribute\">overflow</span>: hidden;\n  }\n\n    <span class=\"hljs-selector-class\">.LogoIcon</span> {\n      <span class=\"hljs-attribute\">flex-grow</span>: <span class=\"hljs-number\">1</span>;\n      <span class=\"hljs-attribute\">flex-shrink</span>: <span class=\"hljs-number\">0</span>;\n      <span class=\"hljs-attribute\">font-size</span>: <span class=\"hljs-number\">64px</span>;\n      <span class=\"hljs-attribute\">text-align</span>: center;\n      <span class=\"hljs-attribute\">padding</span>: <span class=\"hljs-number\">0</span> <span class=\"hljs-number\">10px</span>;\n    }\n\n    <span class=\"hljs-selector-class\">.LogoText</span> {\n      <span class=\"hljs-attribute\">flex-grow</span>: <span class=\"hljs-number\">0</span>;\n      <span class=\"hljs-attribute\">flex-shrink</span>: <span class=\"hljs-number\">1</span>;\n      <span class=\"hljs-attribute\">margin</span>: <span class=\"hljs-number\">0</span>;\n      <span class=\"hljs-attribute\">padding</span>: <span class=\"hljs-number\">20px</span>;\n      <span class=\"hljs-attribute\">font</span>: <span class=\"hljs-number\">900</span> <span class=\"hljs-number\">32px</span> sans-serif;\n      <span class=\"hljs-attribute\">color</span>: <span class=\"hljs-number\">#fff</span>;\n    }\n\n  <span class=\"hljs-selector-class\">.Center</span> {\n    <span class=\"hljs-attribute\">flex-grow</span>: <span class=\"hljs-number\">1</span>;\n    <span class=\"hljs-attribute\">flex-shrink</span>: <span class=\"hljs-number\">1</span>;\n    <span class=\"hljs-attribute\">flex-basis</span>: <span class=\"hljs-number\">800px</span>;\n    <span class=\"hljs-attribute\">flex-direction</span>: row;\n    <span class=\"hljs-attribute\">flex-wrap</span>: wrap;\n    <span class=\"hljs-attribute\">justify-content</span>: center;\n    <span class=\"hljs-attribute\">align-items</span>: center;\n    <span class=\"hljs-attribute\">overflow-x</span>: hidden;\n  }\n\n    <span class=\"hljs-selector-class\">.Links</span> {\n      <span class=\"hljs-attribute\">flex-direction</span>: row;\n      <span class=\"hljs-attribute\">flew-wrap</span>: wrap;\n      <span class=\"hljs-attribute\">align-items</span>: center;\n      <span class=\"hljs-attribute\">flex-grow</span>: <span class=\"hljs-number\">4</span>;\n      <span class=\"hljs-attribute\">flex-shrink</span>: <span class=\"hljs-number\">1</span>;\n      <span class=\"hljs-attribute\">min-width</span>: <span class=\"hljs-number\">50%</span>; \n      <span class=\"hljs-attribute\">overflow-x</span>: auto;\n    }\n  \n      <span class=\"hljs-selector-class\">.Link</span> {\n        <span class=\"hljs-attribute\">margin</span>: <span class=\"hljs-number\">0</span>;\n        <span class=\"hljs-attribute\">padding</span>: <span class=\"hljs-number\">20px</span>;\n        <span class=\"hljs-attribute\">font</span>: <span class=\"hljs-number\">600</span> <span class=\"hljs-number\">20px</span> sans-serif;\n        <span class=\"hljs-attribute\">color</span>: <span class=\"hljs-number\">#fff</span>;\n        <span class=\"hljs-attribute\">text-decoration</span>: none;\n      }\n\n      <span class=\"hljs-selector-class\">.Search</span> {\n        <span class=\"hljs-attribute\">flex</span>: <span class=\"hljs-number\">1</span>;\n        <span class=\"hljs-attribute\">max-width</span>: <span class=\"hljs-number\">200px</span>;\n        <span class=\"hljs-attribute\">min-width</span>: <span class=\"hljs-number\">100px</span>;\n        <span class=\"hljs-attribute\">border</span>: <span class=\"hljs-number\">0</span>;\n        <span class=\"hljs-attribute\">border-radius</span>: <span class=\"hljs-number\">6px</span>;\n        <span class=\"hljs-attribute\">padding</span>: <span class=\"hljs-number\">10px</span> <span class=\"hljs-number\">20px</span>;\n        <span class=\"hljs-attribute\">margin</span>: <span class=\"hljs-number\">10px</span> <span class=\"hljs-number\">20px</span>;\n        <span class=\"hljs-attribute\">font-size</span>: <span class=\"hljs-number\">20px</span>;\n        <span class=\"hljs-attribute\">background</span>: <span class=\"hljs-number\">#444</span>;\n      }\n  \n      <span class=\"hljs-selector-class\">.LinkGradient</span> {\n        <span class=\"hljs-attribute\">content</span>: <span class=\"hljs-string\">&quot;&quot;</span>;\n        <span class=\"hljs-attribute\">position</span>: absolute;\n        <span class=\"hljs-attribute\">top</span>: <span class=\"hljs-number\">0</span>;\n        <span class=\"hljs-attribute\">bottom</span>: <span class=\"hljs-number\">0</span>;\n        <span class=\"hljs-attribute\">width</span>: <span class=\"hljs-number\">40px</span>;\n      }\n      <span class=\"hljs-selector-class\">.LinkGradient-left</span> {\n        <span class=\"hljs-attribute\">left</span>: <span class=\"hljs-number\">0</span>;\n        <span class=\"hljs-attribute\">background</span>: <span class=\"hljs-built_in\">linear-gradient</span>(to left, rgba(<span class=\"hljs-number\">51</span>, <span class=\"hljs-number\">51</span>, <span class=\"hljs-number\">51</span>, <span class=\"hljs-number\">0</span>), <span class=\"hljs-built_in\">rgba</span>(<span class=\"hljs-number\">51</span>, <span class=\"hljs-number\">51</span>, <span class=\"hljs-number\">51</span>, <span class=\"hljs-number\">1</span>));\n      }\n      <span class=\"hljs-selector-class\">.LinkGradient-right</span> {\n        <span class=\"hljs-attribute\">right</span>: <span class=\"hljs-number\">0</span>;\n        <span class=\"hljs-attribute\">background</span>: <span class=\"hljs-built_in\">linear-gradient</span>(to right, rgba(<span class=\"hljs-number\">51</span>, <span class=\"hljs-number\">51</span>, <span class=\"hljs-number\">51</span>, <span class=\"hljs-number\">0</span>), <span class=\"hljs-built_in\">rgba</span>(<span class=\"hljs-number\">51</span>, <span class=\"hljs-number\">51</span>, <span class=\"hljs-number\">51</span>, <span class=\"hljs-number\">1</span>));\n      }\n\n    <span class=\"hljs-selector-class\">.Networks</span> {\n      <span class=\"hljs-attribute\">flex-grow</span>: <span class=\"hljs-number\">1.5</span>;\n      <span class=\"hljs-attribute\">flex-shrink</span>: <span class=\"hljs-number\">0</span>;\n      <span class=\"hljs-attribute\">min-width</span>: <span class=\"hljs-built_in\">calc</span>(<span class=\"hljs-number\">64px</span> * <span class=\"hljs-number\">2</span> + <span class=\"hljs-number\">40px</span>);\n      <span class=\"hljs-attribute\">flex-direction</span>: row;\n      <span class=\"hljs-attribute\">flex-wrap</span>: wrap;\n      <span class=\"hljs-attribute\">max-height</span>: <span class=\"hljs-number\">64px</span>;\n    }\n\n      <span class=\"hljs-selector-class\">.Network</span> {\n        <span class=\"hljs-attribute\">flex-grow</span>: <span class=\"hljs-number\">1</span>;\n        <span class=\"hljs-attribute\">justify-content</span>: center;\n        <span class=\"hljs-attribute\">align-items</span>: center;\n        <span class=\"hljs-attribute\">padding</span>: <span class=\"hljs-number\">10px</span> <span class=\"hljs-number\">6px</span>; \n      }\n</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">style</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">header</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">&quot;Header&quot;</span>&gt;</span>\n  \n  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">&quot;Logo&quot;</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">&quot;LogoIcon&quot;</span>&gt;</span>♥️<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">&quot;LogoText&quot;</span>&gt;</span>Logo<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n  <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n\n  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">&quot;Center&quot;</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">&quot;Links&quot;</span>&gt;</span>\n      <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">a</span> <span class=\"hljs-attr\">href</span>=<span class=\"hljs-string\">&quot;#&quot;</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">&quot;Link&quot;</span>&gt;</span>Lien<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">a</span>&gt;</span>\n      <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">a</span> <span class=\"hljs-attr\">href</span>=<span class=\"hljs-string\">&quot;#&quot;</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">&quot;Link&quot;</span>&gt;</span>Lideux<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">a</span>&gt;</span>\n      <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">a</span> <span class=\"hljs-attr\">href</span>=<span class=\"hljs-string\">&quot;#&quot;</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">&quot;Link&quot;</span>&gt;</span>Limoche<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">a</span>&gt;</span>\n      <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">a</span> <span class=\"hljs-attr\">href</span>=<span class=\"hljs-string\">&quot;#&quot;</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">&quot;Link&quot;</span>&gt;</span>Libeau<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">a</span>&gt;</span>\n      <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">input</span> <span class=\"hljs-attr\">placeholder</span>=<span class=\"hljs-string\">&quot;Search&quot;</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">&quot;Search&quot;</span> /&gt;</span>\n    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">&quot;Networks&quot;</span>&gt;</span>\n      <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">a</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">&quot;Network&quot;</span>&gt;</span>👴<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">a</span>&gt;</span>\n      <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">a</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">&quot;Network&quot;</span>&gt;</span>🐦<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">a</span>&gt;</span>\n      <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">a</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">&quot;Network&quot;</span>&gt;</span>📸<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">a</span>&gt;</span>\n      <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">a</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">&quot;Network&quot;</span>&gt;</span>📌<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">a</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n    \n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">&quot;LinkGradient LinkGradient-left&quot;</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">&quot;LinkGradient LinkGradient-right&quot;</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n  <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">header</span>&gt;</span>\n</code></pre>\n<blockquote>\n<p><a href=\"https://codepen.io/MoOx/pen/WqKBGm\">Code de cette example sur Codepen</a></p>\n</blockquote>\n<p>Vous allez me dire &quot;mais ton exemple il est pas fou là&quot;, et vous avez pas tort.\nJe pense que cela dit, vous avez l'idée en étudiant le code.</p>\n<p>Des exemples de ce type-là, surtout en exploitant bien <code>flex-basis</code>, peuvent se\nrévéler extrêmement puissants. On peut très bien se contenter de ça. Après comme\nsouvent lorsqu’on a des besoins plus complexes, il sera à vous de juger si\ncontinuer à utiliser cette technique est pertinent, ou s’il est plus judicieux\nd’utiliser des media queries afin d’éviter de vous défoncer le cerveau. Ou alors de faire\ndu rendu conditionnel avec JavaScript si votre platforme vous le permet.</p>\n<p>Cette technique est aussi intéressante dans un contexte où les media queries ne\nsont pas accessibles. Ce peut être le cas si vous utilisez un framework ou une\nlib qui ne propose qu’un sous-ensemble de CSS, comme React Native, qui vous\nlimitera dans l'ensemble à Flexbox et position absolute pour gérer votre\nlayout.</p>\n<p>On peut aussi se retrouver à utiliser le même moteur que React Native sur\nplusieurs plateformes directement avec <a href=\"http://yogalayout.com\">Yoga</a> ou\n<a href=\"https://vislyhq.github.io/stretch/\">Stretch</a>.</p>\n<p>On pourrait aussi avoir la même envie si on se retrouve dans un contexte Web où\nCSS serait utilisable, mais où l’on se retrouve avec une abstraction qui ne\npermet pas de les intégrer simplement. Vous allez peut-être répondre : « mais il\nest fou ? Il se fait du mal ».</p>\n<p>Peut-être un peu. À moins qu’une des contraintes choisies soit de partager du\ncode entre différentes plates-formes (coucou\n<a href=\"https://github.com/necolas/react-native-web\">react-native-web</a>,\n<a href=\"https://github.com/microsoft/react-native-windows\">react-native-windows</a>,\n<a href=\"https://github.com/ptmt/react-native-macos\">react-native-macos</a>…) afin\nd'éviter de faire une grosse app qui te bouffe bien la RAM car basé sur Electron\n(coucou Slack).</p>\n<p>Dans tous les cas, media query disponible ou pas, cette astuce est pour moi\nbien plus que ça puisque c'est devenu ma principale méthode pour faire du\nresponsive, faisant beaucoup d'appli React Native et/ou React Native Web.</p>\n<p>Rien que pouvoir avoir le même composant produisant différents rendus sur un\nmême écran (en fonction de la taille disponible par son parent), ça devrait vous\ndonner envie !</p>\n<pre><code class=\"hljs language-reason\"><span class=\"hljs-literal\">[|</span><span class=\"hljs-string\">&quot;Bisous&quot;</span>, <span class=\"hljs-string\">&quot;À la prochaine&quot;</span><span class=\"hljs-literal\">|]</span>\n<span class=\"hljs-operator\">|&gt;</span> <span class=\"hljs-module-identifier\">Js</span>.<span class=\"hljs-module-identifier\">Array</span>.joinWith(<span class=\"hljs-string\">&quot; et &quot;</span>)\n<span class=\"hljs-operator\">|&gt;</span> <span class=\"hljs-module-identifier\">Js</span>.log;\n</code></pre>\n"}