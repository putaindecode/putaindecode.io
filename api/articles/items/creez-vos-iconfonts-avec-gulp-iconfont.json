{"slug":"creez-vos-iconfonts-avec-gulp-iconfont","filename":"2014-05-14-creez-vos-iconfonts-avec-gulp-iconfont","title":"Créez vos iconfonts avec gulp-iconfont","date":"Wed, 14 May 2014 00:00:00 GMT","draft":false,"meta":{"date":"2014-05-14T00:00:00.000Z","title":"Créez vos iconfonts avec gulp-iconfont","author":"kud","oldSlug":"js/gulp/icon-fonts","slug":"creez-vos-iconfonts-avec-gulp-iconfont"},"body":"<p>Après <a href=\"/fr/articles/js/gulp/\">notre introduction sur gulp</a>, je vous propose de\ncréer vos propres fontes à partir d'icônes.</p>\n<p>J'ai bien galéré lorsque j'ai dû passer de <strong>grunt</strong> à <strong>gulp</strong>. Non pas que\ngulp soit compliqué mais retrouver exactement le même <em>workflow</em> qu'avant,\nsachant que gulp est jeune et que les <em>plugins</em> sont bien moins nombreux que sur\ngrunt, c'est pas si évident que ça.</p>\n<p>M'enfin, il y a toujours une solution à un problème.</p>\n<p>Justement, là, mon problème était de répliquer mon <em>process</em> de <strong>svg-to-font</strong>.</p>\n<p>Je me suis creusé les méninges et j'ai finalement trouvé. Cette solution, je\nvous la propose.</p>\n<h2>gulp-iconfont</h2>\n<p>Tout d'abord, installez <strong>gulp</strong> (évident...) et faites ce que vous avez à faire\navec gulp.</p>\n<p>Maintenant, vous êtes prêt(e) ? Okay, go.</p>\n<h3>Installez les <em>packages</em> adéquats</h3>\n<p>Oui, deux packages, <a href=\"https://github.com/nfroidure/gulp-iconfont\">gulp-iconfont</a>\net <a href=\"https://github.com/backflip/gulp-iconfont-css\">gulp-iconfont-css</a>.</p>\n<pre><code class=\"hljs language-console\"><span class=\"hljs-meta\">$</span><span class=\"bash\"> npm install gulp-iconfont gulp-iconfont-css --save-dev</span>\n</code></pre>\n<h3>Importez-les</h3>\n<pre><code class=\"hljs language-js\"><span class=\"hljs-comment\">// import</span>\n<span class=\"hljs-keyword\">var</span> gulp = <span class=\"hljs-built_in\">require</span>(<span class=\"hljs-string\">&quot;gulp&quot;</span>);\n\n<span class=\"hljs-keyword\">var</span> iconfont = <span class=\"hljs-built_in\">require</span>(<span class=\"hljs-string\">&quot;gulp-iconfont&quot;</span>);\n<span class=\"hljs-keyword\">var</span> iconfontCss = <span class=\"hljs-built_in\">require</span>(<span class=\"hljs-string\">&quot;gulp-iconfont-css&quot;</span>);\n</code></pre>\n<h3>Créez votre propre tâche gulp</h3>\n<p>Je préconise d'appeler toute transformation d'une image vers une fonte\n&quot;glyphicon&quot;.</p>\n<pre><code class=\"hljs language-js\"><span class=\"hljs-comment\">// glyphicons</span>\ngulp.task(<span class=\"hljs-string\">&quot;glyphicons&quot;</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{\n  <span class=\"hljs-keyword\">return</span> gulp\n    .src(<span class=\"hljs-string\">&quot;src/glyphicons/**/*&quot;</span>) <span class=\"hljs-comment\">// où sont vos svg</span>\n    .pipe(\n      iconfontCss({\n        <span class=\"hljs-attr\">fontName</span>: <span class=\"hljs-string\">&quot;icons&quot;</span>, <span class=\"hljs-comment\">// nom de la fonte, doit être identique au nom du plugin iconfont</span>\n        <span class=\"hljs-attr\">targetPath</span>: <span class=\"hljs-string\">&quot;../../styles/shared/icons.css&quot;</span>, <span class=\"hljs-comment\">// emplacement de la css finale</span>\n        <span class=\"hljs-attr\">fontPath</span>: <span class=\"hljs-string\">&quot;../fonts/&quot;</span>, <span class=\"hljs-comment\">// emplacement des fontes finales</span>\n      }),\n    )\n    .pipe(\n      iconfont({\n        <span class=\"hljs-attr\">fontName</span>: <span class=\"hljs-string\">&quot;icons&quot;</span>, <span class=\"hljs-comment\">// identique au nom de iconfontCss</span>\n      }),\n    )\n    .pipe(gulp.dest(<span class=\"hljs-string\">&quot;src/assets/fonts&quot;</span>));\n});\n</code></pre>\n<h3>Le final</h3>\n<p>Voilà l'écriture entière de la tâche :</p>\n<pre><code class=\"hljs language-js\"><span class=\"hljs-comment\">// import</span>\n<span class=\"hljs-keyword\">var</span> gulp = <span class=\"hljs-built_in\">require</span>(<span class=\"hljs-string\">&quot;gulp&quot;</span>);\n\n<span class=\"hljs-keyword\">var</span> iconfont = <span class=\"hljs-built_in\">require</span>(<span class=\"hljs-string\">&quot;gulp-iconfont&quot;</span>);\n<span class=\"hljs-keyword\">var</span> iconfontCss = <span class=\"hljs-built_in\">require</span>(<span class=\"hljs-string\">&quot;gulp-iconfont-css&quot;</span>);\n\ngulp.task(<span class=\"hljs-string\">&quot;glyphicons&quot;</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{\n  <span class=\"hljs-keyword\">return</span> gulp\n    .src(<span class=\"hljs-string\">&quot;src/glyphicons/**/*&quot;</span>)\n    .pipe(\n      iconfontCss({\n        <span class=\"hljs-attr\">fontName</span>: <span class=\"hljs-string\">&quot;icons&quot;</span>, <span class=\"hljs-comment\">// nom de la fonte, doit être identique au nom du plugin iconfont</span>\n        <span class=\"hljs-attr\">targetPath</span>: <span class=\"hljs-string\">&quot;../../styles/shared/icons.css&quot;</span>, <span class=\"hljs-comment\">// emplacement de la css finale</span>\n        <span class=\"hljs-attr\">fontPath</span>: <span class=\"hljs-string\">&quot;../fonts/&quot;</span>, <span class=\"hljs-comment\">// emplacement des fontes finales</span>\n      }),\n    )\n    .pipe(\n      iconfont({\n        <span class=\"hljs-attr\">fontName</span>: <span class=\"hljs-string\">&quot;icons&quot;</span>, <span class=\"hljs-comment\">// identique au nom de iconfontCss</span>\n      }),\n    )\n    .pipe(gulp.dest(<span class=\"hljs-string\">&quot;src/assets/fonts&quot;</span>));\n});\n</code></pre>\n<p>Et voilà, on est bon. On peut transformer nos <em>svg</em> en <em>font</em>. \\o/</p>\n"}