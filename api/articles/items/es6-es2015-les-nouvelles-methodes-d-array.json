{"slug":"es6-es2015-les-nouvelles-methodes-d-array","filename":"2015-12-13-es6-es2015-les-nouvelles-methodes-d-array","title":"ES6, ES2015 : les nouvelles m√©thodes d'Array","date":"Sun, 13 Dec 2015 00:00:00 GMT","draft":false,"meta":{"date":"2015-12-13T00:00:00.000Z","title":"ES6, ES2015 : les nouvelles m√©thodes d'Array","author":"lionelB","oldSlug":"js/es2015/array-methods-addition/","slug":"es6-es2015-les-nouvelles-methodes-d-array"},"body":"<p><del>ES6</del> ES2015 enrichit les objets de la bibilioth√®que standard de nouvelles\nfonctionnalit√©s. Voici les nouveaut√©s que l'on va trouver dans <code>Array</code>.</p>\n<h2>Array.from()</h2>\n<p>Parmi les nouvelles m√©thodes ajout√©es √† Array, <code>Array.from()</code> est peut-√™tre\ncelle que vous allez utiliser le plus souvent. Elle va nous permettre de cr√©er\nun tableau √† partir d'un it√©rable ou d'un objet qui ressemble √† un tableau comme\nune NodeList, ou encore <code>arguments</code>.</p>\n<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">const</span> nodes = <span class=\"hljs-built_in\">Array</span>.from(<span class=\"hljs-built_in\">document</span>.querySelectorAll(<span class=\"hljs-string\">&quot;div&quot;</span>));\nnodes.forEach(<span class=\"hljs-function\"><span class=\"hljs-params\">node</span> =&gt;</span> <span class=\"hljs-built_in\">console</span>.log(node));\n</code></pre>\n<h2>Array.of()</h2>\n<p>Cette m√©thode va permettre de cr√©er un tableau √† partir des arguments re√ßus.</p>\n<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">const</span> arr = <span class=\"hljs-built_in\">Array</span>.of(<span class=\"hljs-string\">&quot;hello&quot;</span>, <span class=\"hljs-string\">&quot;world&quot;</span>);\n<span class=\"hljs-built_in\">console</span>.log(arr.join(<span class=\"hljs-string\">&quot; &quot;</span>)); <span class=\"hljs-comment\">// &quot;hello world&quot;</span>\n</code></pre>\n<h2>Array.prototype.keys() &amp; Array.prototype.entries()</h2>\n<p>On retrouve aussi ces m√©thodes sur d'autres it√©rables comme Map ou Set.\n<code>Array.prototype.keys()</code> va renvoyer un nouveau tableau dont les valeurs seront\nles clefs du tableau pass√©es en param√®tre :</p>\n<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">const</span> arr = [...Array(<span class=\"hljs-number\">3</span>).keys()];\n<span class=\"hljs-built_in\">console</span>.log(arr); <span class=\"hljs-comment\">// [0,1,2]</span>\n</code></pre>\n<p><code>Array.prototype.entries()</code> quant √† lui va renvoyer un tableau compos√© des\npaires cl√©/valeur :</p>\n<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">const</span> arr = [<span class=\"hljs-string\">&quot;hello&quot;</span>, <span class=\"hljs-string\">&quot;world&quot;</span>];\n<span class=\"hljs-built_in\">console</span>.log(arr.entries()); <span class=\"hljs-comment\">// [[0, &quot;hello&quot;], [1, &quot;world&quot;]]</span>\n</code></pre>\n<h2>Array.prototype.find()</h2>\n<p>Cette m√©thode va permettre de renvoyer une valeur contenue dans le tableau si\ncelle-ci v√©rifie la condition d√©finie par la fonction de pr√©dicat pass√©e en\nparam√®tre. On retrouve le m√™me principe qu'avec <code>filter</code>, <code>some</code> et <code>every</code>. Si\naucune valeur ne valide la fonction de pr√©dicat, alors la m√©thode renverra\n<code>undefined</code>.</p>\n<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">const</span> arr = [{ <span class=\"hljs-attr\">id</span>: <span class=\"hljs-number\">1</span>, <span class=\"hljs-attr\">label</span>: <span class=\"hljs-string\">&quot;hello&quot;</span> }, { <span class=\"hljs-attr\">id</span>: <span class=\"hljs-number\">2</span>, <span class=\"hljs-attr\">name</span>: <span class=\"hljs-string\">&quot;world&quot;</span> }];\n<span class=\"hljs-keyword\">const</span> found = arr.find(<span class=\"hljs-function\"><span class=\"hljs-params\">item</span> =&gt;</span> item.id === <span class=\"hljs-number\">2</span>);\n<span class=\"hljs-keyword\">const</span> notfound = arr.find(<span class=\"hljs-function\"><span class=\"hljs-params\">item</span> =&gt;</span> item.id === <span class=\"hljs-number\">3</span>);\n<span class=\"hljs-built_in\">console</span>.log(found, notfound); <span class=\"hljs-comment\">// {id:2, name: &quot;worl&quot;}, undefined</span>\n</code></pre>\n<p>√Ä noter qu'il existe aussi <code>Array.prototype.findIndex()</code> qui renverra non pas\nl'objet, mais l'index de l'objet qui validera la fonction de pr√©dicat.</p>\n<h2>Array.prototype.fill()</h2>\n<p>Cette m√©thode va permettre de remplir un tableau avec une valeur pass√©e en\nparam√®tre. Il est toutefois possible de d√©finir un index de d√©but et un index de\nfin (comme avec slice par exemple) si l'on ne souhaite remplacer qu'une partie\ndu tableau.</p>\n<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">const</span> arr = <span class=\"hljs-built_in\">Array</span>(<span class=\"hljs-number\">3</span>).fill(<span class=\"hljs-number\">1</span>);\n<span class=\"hljs-built_in\">console</span>.log(arr); <span class=\"hljs-comment\">// [1,1,1]</span>\n</code></pre>\n<h2>Array.prototype.copyWithin()</h2>\n<p>Cette m√©thode va permettre de renvoyer un nouveau tableau en rempla√ßant une\npartie du tableau par une s√©quence de ce dernier. Pour cela, on va indiquer √†\npartir de quel index on souhaite d√©marrer la copie de la s√©quence, ainsi que\nl'index de d√©but et de fin de la s√©quence que l'on souhaite voir r√©p√©t√©e.</p>\n<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">const</span> arr = [<span class=\"hljs-string\">&quot;hello&quot;</span>,<span class=\"hljs-string\">&quot;alice&quot;</span>, <span class=\"hljs-string\">&quot;my&quot;</span>, <span class=\"hljs-string\">&quot;name&quot;</span>, <span class=\"hljs-string\">&quot;is&quot;</span>, <span class=\"hljs-string\">&quot;bob&quot;</span>]\n<span class=\"hljs-built_in\">console</span>.log(arr.copyWithin(<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">5</span>)]) <span class=\"hljs-comment\">//  &quot;hello&quot;,&quot;bob&quot;, &quot;my&quot;, &quot;name&quot;, &quot;is&quot;, &quot;bob&quot;]</span>\n</code></pre>\n<p>Certaines m√©thodes ne paraissent pas forc√©ment super utiles alors n'h√©sitez √†\nutiliser les commentaires pour partager des exemples d'utilisation plus\nint√©ressants üòõ</p>\n"}