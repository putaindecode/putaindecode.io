{"hasPreviousPage":true,"hasNextPage":true,"totalCount":135,"items":[{"slug":"es6-es2015-les-nouvelles-methodes-d-array","filename":"2015-12-13-es6-es2015-les-nouvelles-methodes-d-array","title":"ES6, ES2015 : les nouvelles méthodes d'Array","date":"Sun, 13 Dec 2015 00:00:00 GMT","draft":false,"meta":{"date":"2015-12-13T00:00:00.000Z","title":"ES6, ES2015 : les nouvelles méthodes d'Array","author":"lionelB","oldSlug":"js/es2015/array-methods-addition/","slug":"es6-es2015-les-nouvelles-methodes-d-array"},"summary":"<p><del>ES6</del> ES2015 enrichit les objets de la bibiliothèque standard de nouvelles\nfonctionnalités. Voici les nouveautés que l'on va trouver dans <code>Array</code>.</p>\n<h2>Array.from()</h2>\n<p>Parmi les nouvelles méthodes ajoutées à Array, <code>Array.from()</code> est peut-être\ncelle q</p>\n"},{"slug":"es6-es2015-parametres-rest-et-operateur-spread","filename":"2015-12-12-es6-es2015-parametres-rest-et-operateur-spread","title":"ES6, ES2015 : paramètres rest et opérateur spread","date":"Sat, 12 Dec 2015 00:00:00 GMT","draft":false,"meta":{"date":"2015-12-12T00:00:00.000Z","title":"ES6, ES2015 : paramètres rest et opérateur spread","author":"zoontek","oldSlug":"js/es2015/rest-spread","slug":"es6-es2015-parametres-rest-et-operateur-spread"},"summary":"<p>Identiques en apparence et en syntaxe, ils permettent d'effectuer plus\nsimplement des opérations complexes sur les tableaux, ou tout autre objet\nitérable.</p>\n<h2>Les paramètres rest</h2>\n<p>Avez-vous déjà eu l'occasion d'utiliser l'horrible variable magique `a</p>\n"},{"slug":"es6-es2015-les-maps-weakmaps","filename":"2015-12-11-es6-es2015-les-maps-weakmaps","title":"ES6, ES2015 : les Maps & WeakMaps","date":"Fri, 11 Dec 2015 00:00:00 GMT","draft":false,"meta":{"date":"2015-12-11T00:00:00.000Z","title":"ES6, ES2015 : les Maps & WeakMaps","author":"bloodyowl","oldSlug":"js/es2015/maps-weakmaps","slug":"es6-es2015-les-maps-weakmaps"},"summary":"<h2>Maps</h2>\n<p>Comme les objets, les maps et weak maps introduites avec ES6 sont des\ndictionnaires. La différence avec un objet, c'est que n'importe quelle valeur\npeut être utilisée comme clé.</p>\n<pre><code class=\"hljs language-javascript\"><span class=\"hljs-keyword\">const</span> myMap = <span class=\"hljs-keyword\">new</span> <span class=\"hljs-built_in\">Map</span>();\nmyMap.set(<span class=\"hljs-built_in\">window</span>, <span class=\"hljs-number\">1</span>);\nm</code></pre>\n"},{"slug":"es6-es2015-iterateurs-et-generateurs","filename":"2015-12-10-es6-es2015-iterateurs-et-generateurs","title":"ES6, ES2015 : itérateurs et générateurs","date":"Thu, 10 Dec 2015 00:00:00 GMT","draft":false,"meta":{"date":"2015-12-10T00:00:00.000Z","title":"ES6, ES2015 : itérateurs et générateurs","author":"naholyr","oldSlug":"js/es2015/generators","slug":"es6-es2015-iterateurs-et-generateurs"},"summary":"<p>Un gros morceau aujourd'hui : les itérateurs et les fonctions qui les génèrent,\nappelées &quot;générateurs&quot;. ES6/2015 apporte énormément de &quot;sucres syntaxiques&quot;,\nmême s'ils sont terriblement pratiques. Les valeurs par défaut, l'affectation\npar déstructura</p>\n"},{"slug":"es6-es2015-le-protocole-d-iteration","filename":"2015-12-09-es6-es2015-le-protocole-d-iteration","title":"ES6, ES2015 : le protocole d'itération","date":"Wed, 09 Dec 2015 00:00:00 GMT","draft":false,"meta":{"date":"2015-12-09T00:00:00.000Z","title":"ES6, ES2015 : le protocole d'itération","author":"ffesseler","oldSlug":"js/es2015/iterators","slug":"es6-es2015-le-protocole-d-iteration"},"summary":"<p>Imaginez un concept si important que si vous l’enleviez du langage, il faudrait\nen conséquence enlever le spread, le destructuring, les générateurs, le for…of\net bien d’autres. Ce concept, introduit dans l’ES6, est en fait un protocole :\nle protocole</p>\n"},{"slug":"es6-es2015-les-object-literals","filename":"2015-12-08-es6-es2015-les-object-literals","title":"ES6, ES2015 : Les object literals","date":"Tue, 08 Dec 2015 00:00:00 GMT","draft":false,"meta":{"date":"2015-12-08T00:00:00.000Z","title":"ES6, ES2015 : Les object literals","author":"lionelB","oldSlug":"js/es2015/object-literals","slug":"es6-es2015-les-object-literals"},"summary":"<p>Là encore, cette évolution du langage amène un sucre syntaxique bien pratique\nlors de l'initialisation d'objets.</p>\n<h2>Nom des propriétés raccourcies</h2>\n<p>Lorsqu'on crée un objet, il arrive fréquemment que lorsqu'on définisse une\npropriété depuis une varia</p>\n"},{"slug":"es6-es2015-les-template-strings","filename":"2015-12-07-es6-es2015-les-template-strings","title":"ES6, ES2015 : les template strings","date":"Mon, 07 Dec 2015 00:00:00 GMT","draft":false,"meta":{"date":"2015-12-07T00:00:00.000Z","title":"ES6, ES2015 : les template strings","author":"jbleuzen","oldSlug":"js/es2015/template-strings","slug":"es6-es2015-les-template-strings"},"summary":"<p>ES2015 ajoute le support des <em>template strings</em> qui va permettre enfin de se\nsimplifier la vie lorsqu'on doit manipuler des chaînes de caractères.</p>\n<h2>Le principe</h2>\n<p>Pour définir une chaîne en JavaScript, il faut utiliser soit des single quotes,\nsoit d</p>\n"}]}